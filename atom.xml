<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HarbingWang</title>
  <subtitle>编码砌字，读思旅行。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-08-21T15:19:31.308Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>HarbingWang</name>
    <email>18317897370@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>实用工具集锦</title>
    <link href="http://yoursite.com/2016/08/21/1605%E5%AE%9E%E7%94%A8%E5%BC%80%E5%8F%91%E5%86%99%E4%BD%9C%E5%B7%A5%E5%85%B7%E9%9B%86%E9%94%A6/"/>
    <id>http://yoursite.com/2016/08/21/1605实用开发写作工具集锦/</id>
    <published>2016-08-21T14:48:21.000Z</published>
    <updated>2016-08-21T15:19:31.308Z</updated>
    
    <content type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3 id=&quot;Xcode自动注释插件-VVDocumenter&quot;&gt;&lt;a href=&quot;#Xcode自动注释插件-VVDocumenter&quot; class=&quot;headerlink&quot; title=&quot;Xcode自动注释插件:VVDocumenter&quot;&gt;&lt;/a&gt;Xcode自动注释插件:VVDocumenter&lt;/h3&gt;&lt;p&gt;下载地址 &lt;a href=&quot;https://github.com/onevcat/VVDocumenter-Xcode&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/onevcat/VVDocumenter-Xcode&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;安装方法&quot;&gt;&lt;a href=&quot;#安装方法&quot; class=&quot;headerlink&quot; title=&quot;安装方法&quot;&gt;&lt;/a&gt;安装方法&lt;/h4&gt;&lt;p&gt;下载完成后,用Xcode工程打开,按&lt;strong&gt;command + B&lt;/strong&gt;, Build成功后,可以在&lt;code&gt;~/Library/Application Support/Developer/Shared/Xcode/Plug-ins&lt;/code&gt; 文件夹下看到&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xso8o.com1.z0.glb.clouddn.com/imagesync/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/VVDocumenter/VVDocumenter.png&quot; alt=&quot;VVDocumenter&quot;&gt;&lt;br&gt;插件需重启Xcode后生效&lt;br&gt;插件设置方法:&lt;br&gt;在Xcode菜单,Window选项可以对插件进行一些设置&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xso8o.com1.z0.glb.clouddn.com/imagesync/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/VVDocumenter/VVDocumenter-2.png&quot; alt=&quot;Xcode-Window&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xso8o.com1.z0.glb.clouddn.com/imagesync/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/VVDocumenter/VVDocumenter-3.png&quot; alt=&quot;img&quot;&gt;&lt;br&gt;注:更新Xcode会导致插件失效,重启安装一次即可正常使用&lt;/p&gt;
&lt;h4 id=&quot;使用方法&quot;&gt;&lt;a href=&quot;#使用方法&quot; class=&quot;headerlink&quot; title=&quot;使用方法&quot;&gt;&lt;/a&gt;使用方法&lt;/h4&gt;&lt;p&gt;在方法写///,效果同下图,下面有方法可以自定义添加注释的方法&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xso8o.com1.z0.glb.clouddn.com/imagesync/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/VVDocumenter/VVDocumenter-4.gif&quot; alt=&quot;注释效果&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;Xcode-控制台输出汉字&quot;&gt;&lt;a href=&quot;#Xcode-控制台输出汉字&quot; class=&quot;headerlink&quot; title=&quot;Xcode 控制台输出汉字&quot;&gt;&lt;/a&gt;Xcode 控制台输出汉字&lt;/h3&gt;&lt;p&gt;下载地址 :  &lt;a href=&quot;https://github.com/Forkong/FKConsole&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/Forkong/FKConsole&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;How-to-install-it&quot;&gt;&lt;a href=&quot;#How-to-install-it&quot; class=&quot;headerlink&quot; title=&quot;How to install it?&quot;&gt;&lt;/a&gt;How to install it?&lt;/h4&gt;&lt;p&gt;推荐使用&lt;a href=&quot;https://github.com/alcatraz/Alcatraz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Alcatraz&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;你也可以clone整个工程，然后编译，插件会自动安装到&lt;code&gt;~/Library/Application Support/Developer/Shared/Xcode/Plug-ins&lt;/code&gt;这个目录上。&lt;/p&gt;
&lt;p&gt;一定要选&lt;strong&gt;Load Bundle&lt;/strong&gt;，Skip的话，插件是无法生效的。 &lt;/p&gt;
</content>
    
    <summary type="html">
    
      本博客主要记录一些日常开发写作中用到的工具。
    
    </summary>
    
      <category term="工具" scheme="http://yoursite.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Xcode" scheme="http://yoursite.com/tags/Xcode/"/>
    
      <category term="MarkDown" scheme="http://yoursite.com/tags/MarkDown/"/>
    
  </entry>
  
  <entry>
    <title>Typora - 颠覆写作体验的免费极简 Markdown 编辑器！</title>
    <link href="http://yoursite.com/2016/08/20/1604Typora-%E9%A2%A0%E8%A6%86%E5%86%99%E4%BD%9C%E4%BD%93%E9%AA%8C%E7%9A%84%E5%85%8D%E8%B4%B9%E6%9E%81%E7%AE%80%20Markdown%20%E7%BC%96%E8%BE%91%E5%99%A8%EF%BC%81/"/>
    <id>http://yoursite.com/2016/08/20/1604Typora-颠覆写作体验的免费极简 Markdown 编辑器！/</id>
    <published>2016-08-20T05:11:21.000Z</published>
    <updated>2016-08-21T15:19:37.037Z</updated>
    
    <content type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;img src=&quot;http://7xso8o.com1.z0.glb.clouddn.com/imagesync/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/Typora/typora_banner.jpg&quot; alt=&quot;Typora - 颠覆写作体验的免费极简 Markdown 编辑器！好用的 MD 格式阅读器&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.iplaysoft.com/tag/markdown&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown&lt;/a&gt; (MD) 是现在最流行的一种文档书写语言格式，用户只需用一些非常「简单易记」的语法就能轻松写出一篇具有良好的排版和可读性的文章，因此大受欢迎，渐渐已成为互联网写作的新潮流。&lt;/p&gt;
&lt;p&gt;通过 &lt;strong&gt;Markdown&lt;/strong&gt; 写作的语法非常简单易上手，譬如用两个星号包围文字即可实现&lt;strong&gt;加粗效果&lt;/strong&gt;，&lt;em&gt;&lt;em&gt;斜体&lt;/em&gt;&lt;/em&gt;，三个减号- - -输出一条分割线等等。在写作时打字跟排版可以一气呵成，熟练后那种高效无干扰的流畅输入绝对会让你有抛弃 &lt;a href=&quot;http://www.iplaysoft.com/office2016.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Word&lt;/a&gt; 之类“重量级”软件的冲动……&lt;/p&gt;
&lt;p&gt;Typora真心好用的极简免费跨平台Markdown编辑器&lt;/p&gt;
&lt;p&gt;现在很多软件 (如 &lt;a href=&quot;http://www.iplaysoft.com/visual-studio-code.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Visual Studio Code&lt;/a&gt;、&lt;a href=&quot;http://www.iplaysoft.com/leanote.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leanote&lt;/a&gt;、&lt;a href=&quot;http://www.iplaysoft.com/dayone.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DayOne&lt;/a&gt;、&lt;a href=&quot;http://www.iplaysoft.com/wiz.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;为知笔记&lt;/a&gt;、&lt;a href=&quot;http://www.iplaysoft.com/simplenote.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Simplenote&lt;/a&gt;、&lt;a href=&quot;http://www.iplaysoft.com/atom.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Atom&lt;/a&gt;、&lt;a href=&quot;http://www.iplaysoft.com/everedit.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EverEdit&lt;/a&gt;) 或网站 (如 &lt;a href=&quot;http://www.iplaysoft.com/github-desktop.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt;、&lt;a href=&quot;https://zh.wikipedia.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;维基&lt;/a&gt;、&lt;a href=&quot;http://www.jianshu.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;简书&lt;/a&gt;) 都已支持 Markdown 语法了。很多下载回来的软件说明也是 .md 或 .markdown 格式的文本文档，不管你是想要写作还是需要阅读，都需要一个简单好用的 &lt;strong&gt;Markdown 编辑器/阅读器&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xso8o.com1.z0.glb.clouddn.com/imagesync/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/Typora/typora.jpg&quot; alt=&quot;Typora Markdown 编辑器&quot;&gt;&lt;/p&gt;
&lt;p&gt;你可能会发现，虽然现在的 &lt;a href=&quot;http://www.iplaysoft.com/tag/markdown&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown 编辑器&lt;/a&gt;多如牛毛，但他们的交互形式基本都是将「&lt;a href=&quot;http://www.iplaysoft.com/tag/%E7%BC%96%E8%BE%91&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;编辑&lt;/a&gt;」和「预览」分离开来的，要么是直接左右排列编辑和预览窗口，要么是要在两种模式之间来回切换，实在是麻烦且不够直观。&lt;strong&gt;而 Typora 则是用创新完全颠覆了这种传统的交互模式&lt;/strong&gt;，它只使用一个窗口，却能优雅地实现同时将代码编辑与预览「一体化」结合起来！从而为用户带来更加流畅直观的「所见即所得的 Markdown 写作体验」。&lt;/p&gt;
&lt;p&gt;行云流水的高效输入体验，极简但不简单！&lt;/p&gt;
&lt;p&gt;你只需在 &lt;img src=&quot;http://www.iplaysoft.com/typora.html&quot; alt=&quot;Typora&quot;&gt; 打字时输入正确的 Markdown 语法标记 (如 二级标题、 &lt;strong&gt;粗体&lt;/strong&gt;)，软件就像触发了键盘&lt;a href=&quot;http://www.iplaysoft.com/tag/%E7%83%AD%E9%94%AE&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;快捷键&lt;/a&gt;一样，将对应的文字会即时转变为它们应该成为的样子。斜体、加粗、插入图片、引用、插入图片、代码、表格、有序列表等等操作就在你敲完代码的一瞬间通通魔法般地“变成现实”，你在&lt;a href=&quot;http://www.iplaysoft.com/tag/%E7%BC%96%E8%BE%91%E5%99%A8&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;编辑器&lt;/a&gt;上看到的直接就是 Markdown 最终的排版效果了，这种行云流水般的写作体验真的非常非常的棒！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xso8o.com1.z0.glb.clouddn.com/imagesync/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/Typora/typora-gif.gif&quot; alt=&quot;Typora&quot;&gt;&lt;/p&gt;
&lt;p&gt;而且，Typora 支持&lt;a href=&quot;http://www.iplaysoft.com/tag/%E4%BB%A3%E7%A0%81&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;代码&lt;/a&gt;块的语法高亮（开发者的福音），对于表格、数学公式这些 MD 里比较难以输入的元素，Typora 也提供了相当方便的辅助；支持键盘快捷键；也提供了导出 Markdown 到 &lt;a href=&quot;http://www.iplaysoft.com/tag/html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HTML&lt;/a&gt; 和&lt;a href=&quot;http://www.iplaysoft.com/tag/pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF&lt;/a&gt; 的功能。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xso8o.com1.z0.glb.clouddn.com/imagesync/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/Typora/typora_screenshot.jpg&quot; alt=&quot;Typora&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果你的文章里用到一、二、三、四级标题等，界面右上角的「Outline」按钮也能自动为你的文章生成「大纲目录」。对，这一点不仅对作者有用，对于 MD 的「读者」来说也是非常方便的功能，再加上 Typora「一体化」的窗口，关联了 .MD 格式直接双击打开就能阅读 Markdown 文件，没有任何多余的功能，作为一款「纯粹的 Markdown 阅读器」也是非常实用的。&lt;/p&gt;
&lt;p&gt;总结：&lt;/p&gt;
&lt;p&gt;总之，对于作者，熟练 &lt;a href=&quot;http://www.iplaysoft.com/tag/markdown&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown&lt;/a&gt; 的语法之后，Typora 给你带来的高效畅快的快感不是其他应用可以比拟的。而对于读者，Typora 极简干净的界面，加上小巧和极快的启动速度，也能完美地胜任「MD 阅读器」的&lt;a href=&quot;http://www.iplaysoft.com/tag/%E5%B7%A5%E4%BD%9C&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;工作&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;Markdown 本来就是追求简洁和优雅而生的产物，使用复杂的工具反而是相悖的。极简的 Typora 没有任何多余的功能，纯粹却仍能提供高效自然的写作体验，无论对重度还是轻度用户都是非常理想的工具。而最让我兴奋的是，Typora 还是一款免费的软件！而且还跨平台支持 Windows 与 Mac！在天价 MD 编辑器满天飞的今天，这种良心优秀的软件真的让人打从心底里佩服其开发者！&lt;/p&gt;
&lt;p&gt;相关文件下载地址&lt;/p&gt;
&lt;p&gt;官方网站：&lt;a href=&quot;https://www.typora.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;访问&lt;/a&gt;&lt;br&gt;软件性质：免费&lt;br&gt;PS：同样比较有特色的 MD 编辑器还有 &lt;a href=&quot;http://www.iplaysoft.com/p/markdance&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdance&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文转载自:&lt;a href=&quot;http://www.iplaysoft.com/typora.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;异次元软件&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Typora For Markdown 语法&lt;/p&gt;
&lt;p&gt;数学表达式&lt;/p&gt;
&lt;p&gt;要启用这个功能，首先到&lt;code&gt;Preference&lt;/code&gt;-&amp;gt;&lt;code&gt;Editor&lt;/code&gt;中启用。然后使用&lt;code&gt;$&lt;/code&gt;符号包裹Tex命令，例如：&lt;code&gt;$lim_{x \to \infty} \ exp(-x)=0$&lt;/code&gt;将产生如下的数学表达式：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1182605-6de962030ea181b8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;p&gt;下标&lt;/p&gt;
&lt;p&gt;下标使用&lt;code&gt;~&lt;/code&gt;包裹，例如：&lt;code&gt;H~2~O&lt;/code&gt;将产生水的分子式。&lt;/p&gt;
&lt;p&gt;上标&lt;/p&gt;
&lt;p&gt;上标使用&lt;code&gt;^&lt;/code&gt;包裹，例如：&lt;code&gt;y^2^=4&lt;/code&gt;将产生表达式&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1182605-ee74782ebfa4a275.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;p&gt;插入表情&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;:happy:&lt;/code&gt;输入高兴的表情，使用&lt;code&gt;:sad:&lt;/code&gt;输入悲伤的表情，使用&lt;code&gt;:cry:&lt;/code&gt;输入哭的表情等。以此类推！&lt;/p&gt;
&lt;p&gt;下划线&lt;/p&gt;
&lt;p&gt;用HTML的语法&lt;code&gt;Underline&lt;/code&gt;将产生下划线Underline.&lt;/p&gt;
&lt;p&gt;删除线&lt;/p&gt;
&lt;p&gt;GFM添加了删除文本的语法，这是标准的Markdown语法木有的。使用&lt;code&gt;~~&lt;/code&gt;包裹的文本将会具有删除的样式，例如&lt;code&gt;~删除文本~&lt;/code&gt;将产生&lt;del&gt;删除文本&lt;/del&gt;的样式。&lt;/p&gt;
&lt;p&gt;代码&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用`包裹的内容将会以代码样式显示，例如&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight autohotkey&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;使用`printf()`&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;则会产生&lt;code&gt;printf()&lt;/code&gt;样式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;输入&lt;code&gt;~~~&lt;/code&gt;或者&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  public Class HelloWorld&amp;#123;  System.out.println(&amp;quot;Hello World!&amp;quot;);&amp;#125;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;强调&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  使用两个*号或者两个_包裹的内容将会被强调。例如&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用两个*号强调内容&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;使用两个下划线强调内容&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight gherkin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  将会输出&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;使用两个\&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;号强调内容&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;使用两个下划线强调内容&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Typroa 推荐使用两个&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;号。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;斜体&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  在标准的Markdown语法中，&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;和_包裹的内容会是斜体显示，但是GFM下划线一般用来分隔人名和代码变量名，因此我们推荐是用星号来包裹斜体内容。如果要显示星号，则使用转义：&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;*&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;插入图片&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  我们可以通过拖拉的方式，将本地文件夹中的图片或者网络上的图片插入。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drag and drop image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;插入URL连接&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;使用尖括号包裹的url将产生一个连接，例如：``将产生连接:[&lt;span class=&quot;string&quot;&gt;www.baidu.com&lt;/span&gt;](&lt;span class=&quot;link&quot;&gt;http://www.baidu.com&lt;/span&gt;).&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;如果是标准的url，则会自动产生连接，例如:[&lt;span class=&quot;string&quot;&gt;www.google.com&lt;/span&gt;](&lt;span class=&quot;link&quot;&gt;http://www.google.com&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;目录列表Table of Contents（TOC）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输入[toc]然后回车，将会产生一个目录，这个目录抽取了文章的所有标题，自动更新内容。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;使用‘ &lt;span class=&quot;emphasis&quot;&gt;***&lt;/span&gt; ‘或者‘ --- ‘，然后回车，来产生水平分割线。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;标注&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;我们可以对某一个词语进行标注。例如&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;某些人用过了才知道[^注释]&lt;br&gt;[^注释]:Somebody that I used to know.&lt;br&gt;&lt;figure class=&quot;highlight autohotkey&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;将产生：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;注释&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;把鼠标放在`注释`上，将会有提示内容。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;表格&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;姓名&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;性别&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;毕业学校&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;工资&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;杨洋&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;男&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;重庆交通大学&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;3200&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;峰哥&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;男&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;贵州大学&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;5000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;坑货&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;女&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;北京大学&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;2000&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figure class=&quot;highlight gherkin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;将产生:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; 姓名   &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 性别   &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 毕业学校   &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 工资   &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; ---- &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; ---- &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; ------ &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; ---- &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; 杨洋   &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 男    &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 重庆交通大学 &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 3200 &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; 峰哥   &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 男    &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 贵州大学   &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 5000 &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; 坑货   &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 女    &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 北京大学   &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 2000 &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;其中代码的第二行指定对齐的方式，第一个是左对齐，第二个和第三个是居中，最后一个是右对齐。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;数学表达式块&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输入两个美元符号，然后回车，就可以输入数学表达式块了。例如：&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; $$\mathbf{V}_1 \times \mathbf{V}_2 =  \begin{vmatrix} \mathbf{i} &amp;amp; \mathbf{j} &amp;amp; \mathbf{k} \\frac{\partial X}{\partial u} &amp;amp;  \frac{\partial Y}{\partial u} &amp;amp; 0 \\frac{\partial X}{\partial v} &amp;amp;  \frac{\partial Y}{\partial v} &amp;amp; 0 \\end{vmatrix}$$&lt;br&gt;&lt;figure class=&quot;highlight accesslog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;将会产生:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;数学表达式块&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;任务列表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;使用如下的代码创建任务列表，在&lt;span class=&quot;string&quot;&gt;[]&lt;/span&gt;中输入x表示完成，也可以通过点击选择完成或者没完成。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[ ] 吃饭&lt;/li&gt;
&lt;li&gt;[ ] 逛街&lt;/li&gt;
&lt;li&gt;[ ] 看电影&lt;/li&gt;
&lt;li&gt;[ ] 约泡&lt;figure class=&quot;highlight gherkin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;任务列表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;列表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输入+, -, &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;,创建无序的列表，使用任意数字开头，创建有序列表，例如：&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;无序的列表&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tfboys&lt;/li&gt;
&lt;li&gt;杨洋&lt;/li&gt;
&lt;li&gt;我爱你&lt;figure class=&quot;highlight haml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;**无序的列表**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-&lt;span class=&quot;ruby&quot;&gt; tfboys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;-&lt;span class=&quot;ruby&quot;&gt; 杨洋&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;-&lt;span class=&quot;ruby&quot;&gt; 我爱你&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;有序的列表&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;苹果&lt;/li&gt;
&lt;li&gt;香蕉&lt;/li&gt;
&lt;li&gt;我都不喜欢&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;strong&quot;&gt;**有序的列表**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;1. &lt;/span&gt;苹果&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;2. &lt;/span&gt;香蕉&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;3. &lt;/span&gt;我都不喜欢&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;块引用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;使用&amp;gt;来插入块引用。例如：&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;这是一个块引用！&lt;br&gt;```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;将产生：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这是一个块引用！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;标题&lt;/p&gt;
&lt;p&gt;使用#表示一级标题，##表示二级标题，以此类推，有6个标题。&lt;/p&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;​        &lt;/p&gt;
</content>
    
    <summary type="html">
    
      一款专为MarkDown而生的写作工具——Typora。
    
    </summary>
    
      <category term="博客搭建" scheme="http://yoursite.com/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="GitHub" scheme="http://yoursite.com/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>深圳</title>
    <link href="http://yoursite.com/2016/06/27/%E3%80%90%E6%91%84%E5%BD%B1%E7%AC%94%E8%AE%B0%E3%80%91%E4%B9%8B%E6%B7%B1%E5%9C%B3/"/>
    <id>http://yoursite.com/2016/06/27/【摄影笔记】之深圳/</id>
    <published>2016-06-26T17:18:12.000Z</published>
    <updated>2016-06-26T17:26:57.925Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://7xso8o.com1.z0.glb.clouddn.com/imagesync%2F%E3%80%90%E6%91%84%E5%BD%B1%E7%AC%94%E8%AE%B0%E3%80%91%2F20160626.jpg&quot; alt=&quot;深圳机场&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xso8o.com1.z0.glb.clouddn.com/imagesync%2F%E3%80%90%E6%91%84%E5%BD%B1%E7%AC%94%E8%AE%B0%E3%80%91%2F20160626.jpg&quot; alt=&quot;深
    
    </summary>
    
      <category term="摄影笔记" scheme="http://yoursite.com/categories/%E6%91%84%E5%BD%B1%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>《岛上书店》</title>
    <link href="http://yoursite.com/2016/06/27/%E3%80%90%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E3%80%91%E4%B9%8B%E3%80%8A%E5%B2%9B%E4%B8%8A%E4%B9%A6%E5%BA%97%E3%80%8B/"/>
    <id>http://yoursite.com/2016/06/27/【读书笔记】之《岛上书店》/</id>
    <published>2016-06-26T17:10:03.000Z</published>
    <updated>2016-08-20T15:19:41.648Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://7xso8o.com1.z0.glb.clouddn.com/imagesync/%E3%80%90%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E3%80%91/%E5%B2%9B%E4%B8%8A%E4%B9%A6%E5%BA%972.jpg&quot; alt=&quot;岛上书店&quot;&gt;&lt;br&gt;岛上书店是间维多利亚风格的小屋，门廊上挂着褪色的招牌，上面写着：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;没有谁是一座孤岛，每本书都是一个世界。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xso8o.com1.z0.glb.clouddn.com/imagesync/%E3%80%90%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E3%80%91/%E5%B2%9B%E4%B8%8A%E4%B9%A6%E5%BA%972.jpg&quot; alt=&quot;岛上书店&quot;&gt;&lt;br&gt;岛上书店是间维多利亚风格的小屋，门廊上挂着褪色的招牌，上面写着：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;没有谁是一座孤岛，每本书都是一个世界。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="http://yoursite.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>初探网络编程之HTTP/HTTPS、TCP/IP及Socket基础</title>
    <link href="http://yoursite.com/2016/06/25/1603%E5%88%9D%E6%8E%A2%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E4%B9%8BHTTP%E3%80%81TCPIP%E5%8F%8ASocket%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2016/06/25/1603初探网络编程之HTTP、TCPIP及Socket基础/</id>
    <published>2016-06-25T04:44:26.000Z</published>
    <updated>2016-06-30T14:32:39.680Z</updated>
    
    <content type="html">&lt;p&gt;最近在做网络编程的时候对HTTP、TCP/IP、Socket等几个概念有所困惑，虽然之前也有所接触但始终未深入了解，遂决心整理下这方面的知识，以加深理解。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;文章参考了诸多大神的博客和一定的计算机网络书籍，只做知识整理巩固之用，内容相对基础，大神请绕道而过。&lt;/p&gt;
&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;本文中，我们首先由国际标准化组织提出的开放式系统互联参考模型为引子，简单了解HTTP、TCP/IP在该模型中的位置，随后将着重讲述一个完整HTTP请求与响应所包含的几个必要的元素，以及不同HTTP协议各版本之间的差异，HTTP与HTTPS之间的联系与区别，最后，我们将阐述HTTP、TCP、UDP与Socket等相关概念极其之间的联系。&lt;br&gt;OSI参考模型与TCP/IP模型&lt;br&gt;首先，我们简单了解一下OSI参考模型的相关知识，相信有兴趣点开此篇文章的朋友或多或少已经对这两个模型有所了解。&lt;br&gt;国际标准化组织（International Organization for Standardization，ISO）为了更好地普及网络应用，希望不同的网络厂商都用相同的规范进行网络控制生产网络设备，使生产出来的设备能够相互之间协同工作，于是推出了开放式系统互联（Open System Interconnect，OSI）参考模型，该参考模型定义了网络互联的七层框架，从下到上依次是：物理层、数据链路层、网络层、传输层、会话层、表示层、应用层。如下图所示：&lt;/p&gt;
&lt;p&gt;在七层模型中，每一层都提供一个特殊的网络功能。从网络功能的角度来讲：低层协议（物理层、数据链路层、网络层、传输层）主要定义了数据传输和交换功能，以节点到节点之间的通讯为主；而高层协议（会话层、表示层、应用层）则定义了网络数据的格式和网络应用，以信息和数据处理为主。第四层传输层作为上下两部分的桥梁，是整个网络体系结构中最为关键的部分。OSI模型用途相当广泛。比如交换机、集线器、路由器等很多网络设备的设计都是参照OSI模型设计的。&lt;br&gt;值得注意的是，OSI参考模型并不是一个标准，而是一个在制定标准时所使用的概念性框架，它概念性地描述了协议之间应该如何相互协同工作，并没有提供具体的实现方法。在实际的网络控制中，真正使用的是TCP/IP协议。&lt;br&gt;TCP/IP字面上代表了传输控制协议（Transmission Control Protocol，TCP）和互联网协议（Internet Protocol，IP）。实际上，TCP/IP协议指的是一个协议族，它是一个具有四层结构的协议系统，由若干协议组成。这四个层次由低到高依次是：网络接口层、网络层、传输层和应用层。我们把这样的协议组合称为TCP/IP协议栈，也称之为TCP/IP模型。&lt;/p&gt;
&lt;p&gt;TCP/IP模型的每层分别具有不同的协议和功能，各层在实现自身功能时，使用它的直接下层所提供的服务，同时也为它的直接上层提供服务。简单来讲，这四层结构的功能分别是：&lt;br&gt;1)网络接口层(Network Access Layer)：网络层负责建立电路连接，是整个网络的物理基础。由于在设计该模型时注重的是网络互联，允许通讯子网（网络接口层）采用已有的或者将来的各种协议，所以在这层并没有提供专门的协议，只要求能够为其上层（网络层）提供一个可以访问的接口。&lt;br&gt;2)网络层(Internet Layer)：网络层是整个TCP/IP协议栈的核心，它定义了分组格式和协议，主要负责分配地址和传送二进制数据。网络层的主要协议有IP、ICMP（Internet Control Message Protocol，互联网控制报文协议）、IGMP（Internet Group Management Protocol，互联网组管理协议）、ARP（Address Resolution Protocol，地址解析协议）和RARP（Reverse Address Resolution Protocol，反向地址解析协议）等。&lt;br&gt;3)传输层(Transport Layer)：传输层的基本功能是为两台主机间的应用程序提供端到端的通信。传输层从应用层接收数据，并且在必要的时候把它分成较小的单元，传递给网络层，并确保到达对方的各段信息正确无误。传输层的主要协议有TCP (Transmission Control Protocol，传输控制协议)和UDP（User Datagram Protocol，用户数据报协议）。&lt;br&gt;4)应用层(Application Layer)：应用层负责处理特定的应用程序细节，是直接与用户打交道的层。应用层显示接收到的信息，把用户的数据发送到低层(传输层)，为应用软件提供网络接口。应用层包含大量常用的应用程序，常用的协议有HTTP（Hyper Text Transfer Protocol超文本传输协议）、Telnet（远程登录）、FTP（File Transfer Protocol）等。&lt;/p&gt;
&lt;p&gt;TCP/IP协议的特点：&lt;br&gt;1、TCP/IP协议不依赖于任何特定的计算机硬件或者操作系统，提供开放的协议标准。&lt;br&gt;2、TCP/IP协议不依赖于特定的网络传输硬件，所以TCP/IP协议可以通过网络接口层集成各种各样的网络，用户能够使用以太网（Ethernet）、令牌环网（Token Ring Network）、拨号线路（Dial-up line）、X.25网以及所有的网络传输硬件。&lt;br&gt;3、由于在网络层中需要通过IP协议分配地址，通过这种统一的地址分配方案，使得整个TCP/IP设备在全球互联网中具有唯一的地址。&lt;br&gt;4、标准化的高层协议，可以提供多种可靠的用户服务。&lt;/p&gt;
&lt;p&gt;TCP/IP协议数据的封装过程&lt;br&gt;    在了解完TCP/IP模型的分层之后，接下来我们将从IP协议讲起，并逐渐过渡到TCP/UDP协议，着重讲述下他们之间的区别。最后我们将会详细分析HTTP相关的知识。在此之前，我们首先看一下TCP/IP协议数据传输的封装过程。具体如下图：&lt;br&gt;    &lt;img src=&quot;http://7xso8o.com1.z0.glb.clouddn.com/imagesync%2F160428%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%2F%E6%95%B0%E6%8D%AE%E5%B0%81%E8%A3%85%E8%BF%87%E7%A8%8B.gif&quot; alt=&quot;数据封装过程&quot;&gt;&lt;br&gt;应用层数据通过协议栈发到网络上时，每层协议都要加上一个数据首部（header），称为封装（Encapsulation）。每个协议层都有数据包，不同的协议层对数据包也有不同的称谓，在传输层叫做段（segment），在网络层叫做数据报（datagram），在链路层叫做帧（frame）。应用层数据通过协议栈被逐层封装成帧后发到传输介质上，想要到达目的主机，需要在每层协议再剥掉相应的首部，最后将应用层数据交给应用程序处理。&lt;/p&gt;
&lt;p&gt;上图对应的是两台计算机在同一网段中的情况，如果两台计算机在不同的网段（这里以以太网和令牌环为例）中，那么数据从一台计算机到另一台计算机传输过程中要经过一个或多个路由器，如下图所示：&lt;/p&gt;
&lt;p&gt;网络层的IP协议是构成Internet的基础。Internet上的主机通过IP地址来标识，Internet上有大量路由器负责根据IP地址选择合适的路径来转发数据包，数据包从Internet上的源主机到目的主机往往要经过十多个路由器。路由器是工作在第三层的网络设备，同时兼有交换机的功能，可以在不同的链路层接口之间转发数据包，因此路由器需要将进来的数据包拆掉网络层和链路层两层首部并重新封装。IP协议不保证传输的可靠性，数据包在传输过程中可能丢失，可靠性可以在上层协议或应用程序中提供支持。&lt;br&gt;网络层负责点到点（point-to-point）的传输（这里的“点”指主机或路由器），而传输层负责端到端（end-to-end）的传输（这里的“端”指源主机和目的主机）。传输层可选择TCP或UDP协议。关于TCP/UDP的相关概念，将会在下面的相关概念中加以阐述。&lt;br&gt;主机（路由器）收到数据包后总不能将已经分装好的数据包发送给用户的应用程序吧？那么问题来了，数据如何经过各层协议栈最后到达应用程序呢？整个过程如下图所示：&lt;/p&gt;
&lt;p&gt;以太网驱动程序首先根据以太网首部中的“上层协议”字段确定该数据帧的有效载荷（payload，指除去协议首部之外实际传输的数据）是IP、ARP还是RARP协议的数据报，然后交给相应的协议处理。假如是IP数据报，IP协议再根据IP首部中的“上层协议”字段确定该数据报的有效载荷是TCP、UDP、ICMP还是IGMP，然后交给相应的协议处理。假如是TCP段或UDP段，TCP或UDP协议再根据TCP首部或UDP首部的“端口号”字段确定应该将应用层数据交给哪个用户进程。IP地址是标识网络中不同主机的地址，而端口号就是同一台主机上标识不同进程的地址，IP地址和端口号合起来标识网络中唯一的进程，“IP地址+端口号”也就是我们常见的Socket，在下面将会详细讲述。&lt;br&gt;注意，虽然IP、ARP和RARP数据报都需要以太网驱动程序来封装成帧，但是从功能上划分，ARP和RARP属于链路层，IP属于网络层。虽然ICMP、IGMP、TCP、UDP的数据都需要IP协议来封装成数据报，但是从功能上划分，ICMP、IGMP与IP同属于网络层，TCP和UDP属于传输层。&lt;/p&gt;
&lt;h2 id=&quot;TCP-IP协议中的几个重要的概念&quot;&gt;&lt;a href=&quot;#TCP-IP协议中的几个重要的概念&quot; class=&quot;headerlink&quot; title=&quot;TCP/IP协议中的几个重要的概念&quot;&gt;&lt;/a&gt;TCP/IP协议中的几个重要的概念&lt;/h2&gt;&lt;h2 id=&quot;IP协议与IP地址&quot;&gt;&lt;a href=&quot;#IP协议与IP地址&quot; class=&quot;headerlink&quot; title=&quot;IP协议与IP地址&quot;&gt;&lt;/a&gt;IP协议与IP地址&lt;/h2&gt;&lt;p&gt;IP协议作为TCP/IP协议的核心之一，它的主要作用是屏蔽所有低层的具体细节，向上层提供统一的通信服务。其中的核心是数据报路由，这一点主要体现在：路由器需要将进来的数据包拆掉网络层和链路层两层首部并重新封装。&lt;br&gt;    IP协议的特点是使用IP地址用于标识计算机所属的网络及主机号，以确定计算机的位置，实现寻址。&lt;br&gt;    IP协议规定了数据包的格式，路由器处理转发的机制等。&lt;br&gt;    IP协议规定网络中每个节点都有一个唯一的数字地址（IP地址）。&lt;/p&gt;
&lt;p&gt;IP地址是唯一标示一台网络设备的，IP地址实际上在互联网上它是一种逻辑地址，它不是一个硬件地址，这个逻辑地址通常是一个网络设备的身份。&lt;/p&gt;
&lt;p&gt;目前使用的IP地址是一个32位的二进制数，通常分为4个8位的二进制，然后转换成4个十进制数（方便计算机操作人员使用），每个数的取值范围都是0~255，彼此间用“.”隔开&lt;br&gt;32位的IP地址构成如下图所示：&lt;br&gt;&lt;img src=&quot;http://7xso8o.com1.z0.glb.clouddn.com/imagesync%2F160428%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%2FIP%E5%9C%B0%E5%9D%80%E7%BB%93%E6%9E%84.jpg&quot; alt=&quot;1&quot;&gt;&lt;br&gt;互联网中，每个IP地址都是唯一不可重复的，互联网中每个主机都属于某个网络，为了进行互联网中主机的识别，将IP地址分为：网络号＋主机号，两部分（就像身份证号码，每段数值都有特定含义）。&lt;/p&gt;
&lt;h2 id=&quot;TCP-UDP协议&quot;&gt;&lt;a href=&quot;#TCP-UDP协议&quot; class=&quot;headerlink&quot; title=&quot;TCP/UDP协议&quot;&gt;&lt;/a&gt;TCP/UDP协议&lt;/h2&gt;&lt;p&gt;1）传输控制协议(Transmission Control Protocol , TCP协议）&lt;br&gt;TCP面向高层应用提供了全双工的、确认重传的、带控制流的传输服务，它允许数据包无差错地、可靠地传到目的主机。TCP可以同时支持不同高层协议的应用。&lt;br&gt;    全双工是指在发送数据的同时也能够接收数据，两者同步进行，这好像我们平时打电话一样，说话的同时也能够听到对方的声音。&lt;br&gt;2）用户数据报协议（User Data Protocol , UDP协议）&lt;br&gt;UDP协议在传输层上提供无连接的数据报传输，他不能保证数据包一定能够到达目的主机，也就是说他不能解决诸如报文丢失、重复、失序、流控等问题。传输的可靠性靠应用层的协议来保证。UDP本身忽略可靠性，而优先考虑传输速度的问题，因此其传输效率较TCP高。&lt;br&gt;通俗点讲，TCP是一种面向连接的、可靠的协议。有点像打电话，双方拿起电话互通身份之后就建立了连接，然后说话就行，这边说的话那边保证听得到，并且是按说话的顺序听到的，说完话挂机就断开连接。也就是说TCP传输的双方需要首先建立连接，之后由TCP协议保证数据收发的可靠性，丢失的数据包会自动重新发送，上层应用程序收到的总是可靠的数据流，通讯之后关闭连接。UDP协议不面向连接，也不能保证可靠性，有点像寄信，写好信放到邮筒里，既不能保证信件在邮递过程中不会丢失，也不能保证信件是否按顺序寄到目的地。使用UDP协议的应用程序需要自己完成丢包的重发、消息排序等工作。&lt;/p&gt;
&lt;p&gt;在简单了解完TCP、UDP之后，我们介绍下两种协议的基本原理与通讯原理。&lt;br&gt;1）TCP协议原理：&lt;br&gt;TCP协议提供了面向连接的、可靠的字节流服务。在传输数据流前，双方会先建立一条虚拟的通信道。一个TCP连接必须要经过三次“对话”才能建立起来，一为请求连接，二为同步要求，三为确认发送。TCP连接过程如下图：&lt;br&gt;&lt;img src=&quot;http://7xso8o.com1.z0.glb.clouddn.com/imagesync%2F160428%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%2FTCP%E9%93%BE%E6%8E%A5.gif&quot; alt=&quot;TCP三次握手&quot;&gt;&lt;/p&gt;
&lt;p&gt;第一次握手：客户端发送syn包(syn=a)到服务器，并进入SYN_SEND状态，等待服务器确认;&lt;br&gt;第二次握手：服务器收到syn包，必须确认客户的SYN(ack=a+1)，同时自己也发送一个SYN包(syn=b)，即SYN+ACK包，此时服务器进入SYN_RECV状态;&lt;br&gt;第三次握手：客户端收到服务器的SYN+ACK包，向服务器发送确认包ACK(ack=b+1)，此包发送完毕，客户端和服务器进入ESTABLISHED状态，完成三次握手。&lt;br&gt;握手过程中传送的包里不包含数据，三次握手完毕后，客户端与服务器才正式开始传送数据。&lt;br&gt;理想状态下，TCP连接一旦建立，在通信双方中的任何一方主动关闭连接之前，TCP 连接都将被一直保持下去。&lt;br&gt;断开连接时服务器和客户端均可以主动发起断开TCP连接的请求，断开过程需要经过“四次握手”。&lt;/p&gt;
&lt;p&gt;2）UDP协议原理：&lt;br&gt;UDP协议是将网络数据量压缩成数据包的形式在网络中进行传输，是一种无连接的协议。使用UDP传输数据时，每个数据段都是一个独立的信息，包括完整的源地址和目的地，在网络上以任何可能的路径传到目的地，因此，能否到达目的地，以及到达目的地的时间和内容的完整性都不能保证。&lt;/p&gt;
&lt;h2 id=&quot;TCP协议和UDP协议的区别：&quot;&gt;&lt;a href=&quot;#TCP协议和UDP协议的区别：&quot; class=&quot;headerlink&quot; title=&quot;TCP协议和UDP协议的区别：&quot;&gt;&lt;/a&gt;TCP协议和UDP协议的区别：&lt;/h2&gt;&lt;p&gt;TCP是面向连接的可靠的协议，适用于传输大批量的文件。它提供有效流控、全双工操作和多路复用的服务。&lt;br&gt;UDP适用于一次只传送少量数据、对可靠性要求不高、对速度要求很高的应用环境（如在线视频）。UDP协议是面向非连接的协议，没有建立连接的过程。正因为UDP协议没有连接的过程，所花时间少，此外它的数据密度大，所以它的通信效率高，实时行很好。&lt;br&gt;此外TCP不能发送广播和组播，只能单播，而UDP可以广播和组播。TCP的传输模式是流模式，UDP的是数据报模式。TCP占用的系统资源较多。UDP段结构比TCP的简单，网络开销小。&lt;br&gt;TCP是流式协议，即数据包是没有边界的，需要自己识别。可以把发TCP数据包的动作理解成往对端用管子灌水。水就是数据包，它们之间没有边界；UDP是面向消息的，每个包是有边界的。可以把发UDP数据包的动作理解成往对端滚玻璃球。每个玻璃球是一个数据包，它们之间有明显的边界。而且由于每个玻璃球的速度可能不一样，先滚的不一定先到，所以需要自己处理乱序。&lt;br&gt;总之，速度和可靠性只能二选一，目前最常用的协议是TCP/IP 协议和UDP 协议。而其他的如RMI，SOAP，FTP ，等协议都可以说是构建在这两者之上的。&lt;br&gt;知道了TCP和UDP的区别，就不难理解为何采用TCP传输协议的MSN比采用UDP的QQ传输文件慢了，但并不能说QQ的通信是不安全的，因为程序员可以手动对UDP的数据收发进行验证，比如发送方对每个数据包进行编号然后由接收方进行验证啊什么的，即使是这样，UDP因为在底层协议的封装上没有采用类似TCP的“三次握手”而实现了TCP所无法达到的传输效率。&lt;/p&gt;
&lt;h2 id=&quot;Socket套接字&quot;&gt;&lt;a href=&quot;#Socket套接字&quot; class=&quot;headerlink&quot; title=&quot;Socket套接字&quot;&gt;&lt;/a&gt;Socket套接字&lt;/h2&gt;&lt;p&gt;首先，我们通过一张图来了解下Socket在哪个位置？&lt;/p&gt;
&lt;p&gt;Socket又称之为“套接字”，它是系统提供的一种用于网络通讯的方法，其实质并不是一种协议，只是给程序员提供了一个发送消息的接口，程序员使用这个接口提供的方法向网络发出请求或者应答网络的请求。&lt;br&gt;总结：Socket是对TCP/IP协议的封装，Socket本身并不是协议，而是一个调用接口（API）。&lt;/p&gt;
&lt;p&gt;1)    Socket原理&lt;br&gt;套接字是通信的基石，是支持TCP/IP协议的网络通信的基本操作单元。应用层通过传输层进行数据通信时，TCP会遇到同时为多个应用程序进程提供并发服务的问题。多个TCP连接或多个应用程序进程可能需要通过同一个 TCP协议端口传输数据。为了区别不同的应用程序进程和连接，许多计算机操作系统为应用程序与TCP／IP协议交互提供了套接字(Socket)接口。应 用层可以和传输层通过Socket接口，区分来自不同应用程序进程或网络连接的通信，实现数据传输的并发服务。&lt;/p&gt;
&lt;p&gt;2）利用Socket建立网络连接的步骤&lt;br&gt;建立Socket连接至少需要一对套接字，其中一个运行于客户端，称为ClientSocket ，另一个运行于服务器端，称为ServerSocket 。&lt;br&gt;套接字之间的连接过程分为三个步骤：服务器监听，客户端请求，连接确认。&lt;br&gt;服务器监听：服务器端套接字并不定位具体的客户端套接字，而是处于等待连接的状态，实时监控网络状态，等待客户端的连接请求。&lt;br&gt;客户端请求：指客户端的套接字提出连接请求，要连接的目标是服务器端的套接字。为此，客户端的套接字必须首先描述它要连接的服务器的套接字，指出服务器端套接字的地址和端口号，然后就向服务器端套接字提出连接请求。&lt;br&gt;连接确认：当服务器端套接字监听到或者说接收到客户端套接字的连接请求时，就响应客户端套接字的请求，建立一个新的线程，把服务器端套接字的描述发给客户 端，一旦客户端确认了此描述，双方就正式建立连接。而服务器端套接字继续处于监听状态，继续接收其他客户端套接字的连接请求。&lt;/p&gt;
&lt;h2 id=&quot;Http相关&quot;&gt;&lt;a href=&quot;#Http相关&quot; class=&quot;headerlink&quot; title=&quot;Http相关&quot;&gt;&lt;/a&gt;Http相关&lt;/h2&gt;&lt;p&gt;1）    Http协议&lt;br&gt;Http协议即超文本传输协议(Hypertext Transfer Protocal，HTTP),它是一个基于请求-响应模式的无状态的应用层协议。&lt;br&gt;从名字上可以看出该协议用于规定客户端与服务端之间的传输规则，所传输的内容不局限于文本(其实可以传输任意类型的数据)。&lt;/p&gt;
&lt;p&gt;2）    Http请求与响应的内容&lt;br&gt;1、请求行&lt;br&gt;请求行包含请求方法(Method)、请求统一资源标识符(URI)、HTTP版本号，如图2.1第一行所示：&lt;/p&gt;
&lt;p&gt;图2.2 请求行.png&lt;br&gt;•    请求方法就是我们所熟悉的POST、GET、HEAD、PUT等&lt;br&gt;•    URI就是URL中排除掉Host剩下的部分，也就是资源在服务器本地上的路径&lt;br&gt;•    HTTP版本号，目前主流的版本是1.1(1999年开始采用)，最新的版本是2.0(2015年5月发布)。不同版本之间差异下面会再展开&lt;br&gt;2、请求头&lt;br&gt;请求头主要存放对客户端想给服务端的附加信息，下图框框的部分就是请求头：&lt;/p&gt;
&lt;p&gt;图2.3 请求头.png&lt;br&gt;HTTP请求在iOS中用NSURLRequest与NSMutableRequest表示；HTTP响应用NSHTTPURLResponse表示。&lt;br&gt;•    Host: 目标服务器的网络地址&lt;br&gt;•    Accept: 让服务端知道客户端所能接收的数据类型，如text/html &lt;em&gt;/&lt;/em&gt;&lt;br&gt;•    Content-Type: body中的数据类型，如application/json; charset=UTF-8&lt;br&gt;•    Accept-Language: 客户端的语言环境，如zh-cn&lt;br&gt;•    Accept-Encoding: 客户端支持的数据压缩格式，如gzip&lt;br&gt;•    User-Agent: 客户端的软件环境，我们可以更改该字段为自己客户端的名字，比如QQ music v1.11，比如浏览器Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/600.8.9 (KHTML, like Gecko) Maxthon/4.5.2&lt;br&gt;•    Connection: keep-alive，该字段是从HTTP 1.1才开始有的，用来告诉服务端这是一个持久连接，“请服务端不要在发出响应后立即断开TCP连接”。关于该字段的更多解释将在后面的HTTP版本简介中展开。&lt;br&gt;•    Content-Length: body的长度，如果body为空则该字段值为0。该字段一般在POST请求中才会有。&lt;br&gt;POST请求的body请求体也有可能是空的，因此POST中Content-Length也有可能为0&lt;br&gt;•    Cookie: 记录者用户信息的保存在本地的用户数据，如果有会被自动附上&lt;br&gt;值得一提的是，在iOS中当你发送一个任意请求时，不管你愿不愿意，NSURLRequest都会自动帮你记录你所访问的URL上设置的cookie。在iOS中用NSHTTPCookieStorage表示，是一个单例。通过&lt;br&gt;1&lt;br&gt;2&lt;br&gt;3&lt;br&gt;4    NSHTTPCookieStorage &lt;em&gt;cookieJar = [NSHTTPCookieStorage sharedHTTPCookieStorage];&lt;br&gt;for (NSHTTPCookie &lt;/em&gt;cookie in [cookieJar cookies]) {&lt;br&gt; NSLog(@”%@”, cookie);&lt;br&gt;}&lt;br&gt;可以获取目前被自动保存的所有cookie。对cookie的操作感兴趣的请移步iOS中http请求使用cookie这篇文章。&lt;br&gt;以上就是我们日常开发中比较经常遇到的请求头，其实还有其他的field，但篇幅所限无法一一列出，想了解所有请求头请看这里请求头响应头列表。那在iOS中如何设置添加这些field呢？可以使用-[NSMutableURLRequest addValue: forHTTPHeaderField:]方法，获取当前请求已经设置的field可以用-[NSURLRequest allHTTPHeaderFields]。也就是我们可以通过以上接口定制我们所需要的请求头，但是有些field是不能改的，我们看一下iOS的描述：&lt;br&gt; 图2.4 iOS请求头接口描述.png&lt;br&gt;从文档中我们可以看到，在iOS中不应当对Authorization Connection Host WWW-Authenticate这几个header field做更改。&lt;br&gt;3、请求体&lt;br&gt;真正需要发给服务端的数据，在使用POST-multipart上传请求中请求体就是上传文件的二进制NSData类型数据；在GET请求中请求体为空；在普通的POST请求中请求体就是一些表单数据。在iOS中一般用NSURLRequest与NSMutableURLRequest的HTTPBody属性表示，添加body用-[NSMutableURLRequest setHTTPBody:]。&lt;br&gt;4、响应状态行&lt;br&gt;状态行是服务端返回给客户端的状态信息，包含HTTP版本号、状态码、状态码对应的英文名称。&lt;br&gt;以下就是典型的正确状态行：&lt;br&gt;1    HTTP/1.1 200 OK&lt;br&gt;这个部分需要讲的是错误码。事实上HTTP请求错误码可以根据错误码从左往右第一个数字大致分为以下几类：&lt;br&gt;1XX：信息提示。不代表成功或者失败，表示临时响应，比如100表示继续，101表示切换协议&lt;br&gt;2XX: 成功&lt;br&gt;3XX: 重定向&lt;br&gt;4XX:客户端错误，很有可能是客户端发生问题，如亲切可爱的404表示未找到文件，说明你的URI是有问题的，服务器机子上该目录是没有该文件的；414URI太长&lt;br&gt;5XX: 服务器错误，比如504网关超时&lt;br&gt;错误码是不用去记的，出错了再查对应的错误码含义就行。但是知道上面的分类有助于第一时间做出大体的判断，起码你能清楚是服务端还是客户端的原因。&lt;br&gt;5、响应头与响应实体&lt;br&gt;这部分与请求部分差异不大，响应头的字field会有稍许不同，响应头中的header field同样移步请求头响应头列表。&lt;/p&gt;
&lt;p&gt;3）    Http版本简介&lt;br&gt;HTTP 1.1之前&lt;br&gt;•    不支持持久连接。一旦服务器对客户端发出响应就立即断开TCP连接&lt;br&gt;•    无请求头跟响应头&lt;br&gt;•    客户端的前后请求是同步的。下一个请求必须等上一个请求从服务端拿到响应后才能发出，有点类似多线程的同步机制。&lt;br&gt;HTTP 1.1(主流版本)&lt;br&gt;与1.1之前的版本相比，做了以下性能上的提升&lt;br&gt;•    增加请求头跟响应头&lt;br&gt;•    支持持久连接。客户端通过请求头中指定Connection为keep-alive告知服务端不要在完成响应后立即释放连接。HTTP是基于TCP的，在HTTP 1.1中一次TCP连接可以处理多次HTTP请求&lt;br&gt;•    客户端不同请求之间是异步的。下一个请求不必等到上一个请求回来后再发出，而可以连续发出请求，有点类似多线程的异步处理。&lt;br&gt;HTTP 2.0&lt;br&gt;本着向下兼容的原则，1.1版本有的特性2.0都具备，也使用相同的API。但是2.0将只用于https网址。由于2.0的普及还需要比较长的一段时间，这里不展开，更多新特性请参考这篇文章。&lt;br&gt;我们重点关注一下当前1.1版本所做几点改变。支持持久连接有什么好处呢？HTTP是基于TCP连接的，如果连接被频繁地启动然后断开就会花费很多资源在TCP三次握手以及四次挥手上，效率低下。以请求一个网页为例，我们知道，一个html网页上的图片资源并不是直接嵌入在网页上，而只是提供url，图片仍需要额外发HTTP 请求去下载。一个网页从请求到最终加载到本地往往需要经过过个HTTP请求。在1.1版本之前请求一个网页就需要发生多次”握手-挥手”的过程，每次连接之间相互独立；而1.1及之后的版本最少只需要一次就够。&lt;br&gt;再来就是请求异步，其好处参考多线程异步处理，在此不展开。&lt;/p&gt;
&lt;h2 id=&quot;Http与TCP、Scoket的区别&quot;&gt;&lt;a href=&quot;#Http与TCP、Scoket的区别&quot; class=&quot;headerlink&quot; title=&quot;Http与TCP、Scoket的区别&quot;&gt;&lt;/a&gt;Http与TCP、Scoket的区别&lt;/h2&gt;&lt;p&gt;HTTP是应用层的协议，更靠近用户端；TCP是传输层的协议；而socket是从传输层上抽象出来的一个抽象层，本质是接口。所以本质上三种还是很好区分的。尽管如此，有时候你可能会懵逼，HTTP连接、TCP连接、socket连接有什么区别？好吧，如果上面的图解释的还是不够清楚的话，我们继续往下看。&lt;br&gt;1、TCP连接与HTTP连接的区别&lt;br&gt;上文提过，HTTP是基于TCP的，客户端往服务端发送一个HTTP请求时第一步就是要建立与服务端的TCP连接，也就是先三次握手，“你好，你好，你好”。从HTTP 1.1开始支持持久连接，也就是一次TCP连接可以发送多次的HTTP请求。&lt;br&gt;小总结：HTTP基于TCP&lt;br&gt;2、TCP连接与Socket连接的区别&lt;br&gt;在图4.1中我们提到，socket层只是在TCP/UDP传输层上做的一个抽象接口层，因此一个socket连接可以基于连接，也有可能基于UDP。基于TCP协议的socket连接同样需要通过三次握手建立连接，是可靠的；基于UDP协议的socket连接不需要建立连接的过程，不过对方能不能收到都会发送过去，是不可靠的，大多数的即时通讯IM都是后者。&lt;br&gt;小总结：Socket也基于TCP&lt;br&gt;3、HTTP连接与Socket连接的区别&lt;br&gt;区分这两个概念是比较有意义的，毕竟TCP看不见摸不着，HTTP与Socket是实实在在能用到的。&lt;br&gt;•    HTTP是短连接，Socket(基于TCP协议的)是长连接。尽管HTTP1.1开始支持持久连接，但仍无法保证始终连接。而Socket连接一旦建立TCP三次握手，除非一方主动断开，否则连接状态一直保持。&lt;br&gt;•    HTTP连接服务端无法主动发消息，Socket连接双方请求的发送先后限制。这点就比较重要了，因为它将决定二者分别适合应用在什么场景下。HTTP采用“请求-响应”机制，在客户端还没发送消息给服务端前，服务端无法推送消息给客户端。必须满足客户端发送消息在前，服务端回复在后。Socket连接双方类似peer2peer的关系，一方随时可以向另一方喊话。&lt;br&gt;4、问题来了：什么时候该用HTTP，什么时候该用socket&lt;br&gt;这个问题的提出是很自然而然的。当你接到一个与另一方的网络通讯需求，自然会考虑用HTTP还是用Socket。&lt;br&gt;•    用HTTP的情况：双方不需要时刻保持连接在线，比如客户端资源的获取、文件上传等。&lt;br&gt;•    用Socket的情况：大部分即时通讯应用(QQ、微信)、聊天室、苹果APNs等&lt;br&gt;在iOS中，发HTTP请求一般用原生的NSURLConnection、NSURLSession或者开源的AFNetWorking(推荐)、ASIHttpRequest(已停止更新)。连接Socket连接我用的比较多是robbiehanson大神的CocoaAsyncSocket (XMPPFramework也是出自他手)。&lt;/p&gt;
&lt;p&gt;Socket又称”套接字”，应用程序通常通过”套接字”向网络发出请求或者应答网络请求。&lt;br&gt;以J2SDK-1.3为例，Socket和ServerSocket类库位于java.net包中。ServerSocket用于服务器端，Socket是建立网络连接时使用的。在连接成功时，应用程序两端都会产生一个Socket实例，操作这个实例，完成所需的会话。对于一个网络连接来说，套接字是平等的，并没有差别，不因为在服务器端或在客户端而产生不同级别。不管是Socket还是ServerSocket它们的工作都是通过SocketImpl类及其子类完成的。&lt;br&gt;socket现象解释&lt;/p&gt;
&lt;p&gt;Socket非常类似于电话插座。以一个国家级电话网为例，电话的通话双方相当于相互通信的2个进程，区号是它的网络地址；区内一个单位的交换机相当于一台主机，主机分配给每个用户的局内号码相当于Socket号。任何用户在通话之前，首先要占有一部电话机，相当于申请一个Socket；同时要知道对方的号码，相当于对方有一个固定的Socket。然后向对方拨号呼叫，相当于发出连接请求（假如对方不在同一区内，还要拨对方区号，相当于给出网络地址）。假如对方在场并空闲（相当于通信的另一主机开机且可以接受连接请求），拿起电话话筒，双方就可以正式通话，相当于连接成功。双方通话的过程，是一方向电话机发出信号和对方从电话机接收信号的过程，相当于向Socket发送数据和从socket接收数据。通话结束后，一方挂起电话机相当于关闭Socket，撤消连接。&lt;br&gt;在电话系统中，一般用户只能感受到本地电话机和对方电话号码的存在，建立通话的过程，话音传输的过程以及整个电话系统的技术细节对他都是透明的，这也与Socket机制非常相似。Socket利用网间网通信设施实现进程通信，但它对通信设施的细节毫不关心，只要通信设施能提供足够的通信能力，它就满足了。&lt;br&gt;至此，我们对Socket进行了直观的描述。抽象出来，Socket实质上提供了进程通信的端点。进程通信之前，双方首先必须各自创建一个端点，否则是没有办法建立联系并相互通信的。正如打电话之前，双方必须各自拥有一台电话机一样。&lt;br&gt;在网间网内部，每一个Socket用一个半相关描述：（协议，本地地址，本地端口）。&lt;br&gt;一个完整的Socket有一个本地唯一的Socket号，由操作系统分配。&lt;br&gt;最重要的是，Socket是面向客户/服务器模型而设计的，针对客户和服务器程序提供不同的Socket系统调用。客户随机申请一个Socket（相当于一个想打电话的人可以在任何一台入网电话上拨号呼叫），系统为之分配一个Socket号；服务器拥有全局公认的Socket，任何客户都可以向它发出连接请求和信息请求（相当于一个被呼叫的电话拥有一个呼叫方知道的电话号码）。&lt;br&gt;Socket利用客户/服务器模式巧妙地解决了进程之间建立通信连接的问题。服务器Socket半相关为全局所公认非常重要。读者不妨考虑一下，两个完全随机的用户进程之间如何建立通信？假如通信双方没有任何一方的Socket固定，就好比打电话的双方彼此不知道对方的电话号码，要通话是不可能的。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近在做网络编程的时候对HTTP、TCP/IP、Socket等几个概念有所困惑，虽然之前也有所接触但始终未深入了解，遂决心整理下这方面的知识，以加深理解。&lt;/p&gt;
    
    </summary>
    
    
      <category term="网络编程" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    
      <category term="TCP/IP" scheme="http://yoursite.com/tags/TCP-IP/"/>
    
      <category term="Socket" scheme="http://yoursite.com/tags/Socket/"/>
    
  </entry>
  
  <entry>
    <title>iOS中的消息传递机制</title>
    <link href="http://yoursite.com/2016/05/22/1602iOS%E4%B8%AD%E7%9A%84%E6%B6%88%E6%81%AF%E4%BC%A0%E9%80%92%E6%9C%BA%E5%88%B6/"/>
    <id>http://yoursite.com/2016/05/22/1602iOS中的消息传递机制/</id>
    <published>2016-05-22T03:08:25.000Z</published>
    <updated>2016-06-30T14:31:06.801Z</updated>
    
    <content type="html">&lt;p&gt;简要介绍iOS中几种常用的消息传递机制：KVO、Notification、delegation、block 以及Target-Action模式&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;KVO&quot;&gt;&lt;a href=&quot;#KVO&quot; class=&quot;headerlink&quot; title=&quot;KVO&quot;&gt;&lt;/a&gt;KVO&lt;/h2&gt;&lt;p&gt;KVO提供了这样一种机制：当对象中的某个属性值发生了改变，可以对这些值的观察者做出通知。KVO的实现包含在Foundation里面，基于Foundation构建的许多Framework对KVO都有所依赖。要想了解更多关于如何使用KVO，可以阅读本期由Daniel写的的KVO和KVC文章。&lt;/p&gt;
&lt;p&gt;　　如果对某个对象中值的改变情况感兴趣，那么可以使用KVO消息传递机制。这里有两个要求，首先，接收者(会接收到值发生改变的消息)必须知道发送者(值将发生改变的那个对象)。另外，接收者同样还需要知道发送者的生命周期，因为在销毁发送者对象之前，需要取消观察者的注册。如果这两个要求都满足了，消息传递过程中可以是1对多(多个观察者可以注册某个对象中的值)。&lt;/p&gt;
&lt;p&gt;　　如果计划在Core Data对象上使用KVO，需要知道这跟一般的KVO使用方法有点不同。那就是必须结合Core Data的故障机制(faulting mechanism)，一旦core data出现了故障，它将会触发其属性对应的观察者(即使这些属性值没有发生改变)。&lt;/p&gt;
&lt;h2 id=&quot;Notification&quot;&gt;&lt;a href=&quot;#Notification&quot; class=&quot;headerlink&quot; title=&quot;Notification&quot;&gt;&lt;/a&gt;Notification&lt;/h2&gt;&lt;p&gt;　　在不相关的两部分代码中要想进行消息传递，通知(notifacation)是非常好的一种机制，它可以对消息进行广播。特别是想要传递丰富的信息，并且不一定指望有谁对此消息关心。&lt;br&gt;　　通知可以用来发送任意的消息，甚至包含一个userInfo字典，或者是NSNotifacation的一个子类。通知的独特之处就在于发送者和接收者双方并不需要相互知道。这样就可以在非常松耦合的模块间进行消息的传递。记住，这种消息传递机制是单向的，作为接收者是不可以回复消息的。&lt;/p&gt;
&lt;h2 id=&quot;delegation&quot;&gt;&lt;a href=&quot;#delegation&quot; class=&quot;headerlink&quot; title=&quot;delegation&quot;&gt;&lt;/a&gt;delegation&lt;/h2&gt;&lt;p&gt;在苹果的Framework中，delegation模式被广泛的只用着。delegation允许我们定制某个对象的行为，并且可以收到某些确定的事件。为了使用delegation模式，消息的发送者需要知道消息的接收者(delegate)，反过来就不用了。这里的发送者和接收者是比较松耦合的，因为发送者只知道它的delegate是遵循某个特定的协议。&lt;/p&gt;
&lt;p&gt;delegate协议可以定义任意的方法，因此你可以准确的定义出你所需要的类型。你可以用函数参数的形式来处理消息内容，delegate还可以通过返回值的形式给发送者做出回应。如果只需要在相对接近的两个模块之间进行消息传递，那么Delegation是一种非常灵活和直接方式。&lt;/p&gt;
&lt;p&gt;不过，过渡使用delegation也有一定的风险，如果两个对象的耦合程度比较紧密，相互之间不能独立存在，那么此时就没有必要使用delegate协议了，针对这种情况，对象之间可以知道相互间的类型，进而直接进行消息传递。例如UICollectionViewLayout和NSURLSessionConfiguration。&lt;/p&gt;
&lt;h2 id=&quot;block&quot;&gt;&lt;a href=&quot;#block&quot; class=&quot;headerlink&quot; title=&quot;block&quot;&gt;&lt;/a&gt;block&lt;/h2&gt;&lt;p&gt;Block相对来说，是一种比较新的技术，它首次出现是在OS X 10.6和iOS 4中。一般情况下，block可以满足用delegation实现的消息传递机制。不过这两种机制都有各自的需求和优势。&lt;/p&gt;
&lt;p&gt;当不考虑使用block时，一般主要是考虑到block极易引起retain环。如果发送者需要reatain block，而又不能确保这个引用什么时候被nil，这样就会发生潜在的retain环。&lt;/p&gt;
&lt;p&gt;假设我们想要实现一个table view，使用block替代delegate，来当做selection的回调，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.myTableView.selectionHandler = ^&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSIndexPath&lt;/span&gt; *selectedIndexPath) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// handle selection ... &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面代码的问题在于self retain了table view，而table view为了之后能够使用block，进而 retain了block。而table view又不能把这个引用nil掉，因为它不知道什么时候不在需要这个block了。如果我们保证不了可以打破这个retain环，而我们又需要retain发送者，此时block不是好的选择。&lt;/p&gt;
&lt;p&gt;NSOperation就可以很好的使用block，因为它能再某个时机打破retain环：&lt;/p&gt;
&lt;figure class=&quot;highlight hsp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;01&lt;/span&gt;.self.queue = [[NSOperationQueue &lt;span class=&quot;keyword&quot;&gt;alloc&lt;/span&gt;] init]&lt;span class=&quot;comment&quot;&gt;; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;02&lt;/span&gt;.MyOperation *operation = [[MyOperation &lt;span class=&quot;keyword&quot;&gt;alloc&lt;/span&gt;] init]&lt;span class=&quot;comment&quot;&gt;; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;03&lt;/span&gt;.operation.completionBlock = ^&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;04&lt;/span&gt;.    [self finishedOperation]&lt;span class=&quot;comment&quot;&gt;; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;05&lt;/span&gt;.&amp;#125;&lt;span class=&quot;comment&quot;&gt;; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;06&lt;/span&gt;.[self.queue addOperation:operation]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;乍一看这似乎是一个retain环：self retain了queue，queue retain了operation，而operation retain了completion block，而completion blockretain了self。不过，在这里，将operation添加到queue时，会使operation在某个时机被执行，然后从queue中remove掉（如果没有被执行，就会有大问题了）。一单queue移除了operation之后，retain环就被打破了。&lt;/p&gt;
&lt;p&gt;再来一个示例：这里实现了一个视频编码器的类，里面有一个名为encodeWithCompletionHandler:的方法。为了避免出现retain环，我们需要确保编码器这个对象能够在某个时机nil掉其对block的引用。其内部代码如下所示：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;01.&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Encoder&lt;/span&gt; () &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;02.&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; (^completionHandler)(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;03.&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;04.&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;05.&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Encoder&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;06.&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;07.&lt;/span&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)encodeWithCompletionHandler:(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; (^)())handler &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;08.&lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;09.&lt;/span&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.completionHandler = handler; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;10.&lt;/span&gt;    &lt;span class=&quot;comment&quot;&gt;// do the asynchronous processing... &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;11.&lt;/span&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;12.&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;13.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;// This one will be called once the job is done &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;14.&lt;/span&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)finishedEncoding &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;15.&lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;16.&lt;/span&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.completionHandler(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;17.&lt;/span&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.completionHandler = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// &amp;lt;- Don&#39;t forget this! &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;18.&lt;/span&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;19.&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;20.&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在上面的代码中，一旦编码任务完成，就会调用complietion block，进而把引用nil掉。&lt;/p&gt;
&lt;p&gt;如果我们发送的消息属于一次性的(具体到某个方法的调用)，由于这样可以打破潜在的retain环，那么使用block是非常不错的选择。另外，如果为了让代码可读性更强，更有连贯性，那最好是使用block了。根据这个思路，block经常可以用于completion handler、error handler等。&lt;/p&gt;
&lt;h2 id=&quot;Target-Action&quot;&gt;&lt;a href=&quot;#Target-Action&quot; class=&quot;headerlink&quot; title=&quot;Target-Action&quot;&gt;&lt;/a&gt;Target-Action&lt;/h2&gt;&lt;p&gt;Target-Action主要被用于响应用户界面事件时所需要传递的消息中。iOS中的UIControl和Mac中的NSControl/NSCell都支持这种机制。Target-Action在消息的发送者和接收者之间建立了一个非常松散耦合。消息的接收者不知道发送者，甚至消息的发送者不需要预先知道消息的接收者。如果target是nil，action会在响应链(responder chain)中被传递，知道找到某个能够响应该aciton的对象。在iOS中，每个控件都能关联多个target-action。&lt;/p&gt;
&lt;p&gt;基于target-action消息传递的机制有一个局限就是发送的消息不能携带自定义的payload。在Mac的action方法中，接收者总是被放在第一个参数中。而在iOS中，可以选择性的将发送者和和触发action的事件作为参数。除此之外，没有别的办法可以对发送action消息内容做控制。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;简要介绍iOS中几种常用的消息传递机制：KVO、Notification、delegation、block 以及Target-Action模式&lt;/p&gt;
    
    </summary>
    
    
      <category term="消息传递" scheme="http://yoursite.com/tags/%E6%B6%88%E6%81%AF%E4%BC%A0%E9%80%92/"/>
    
      <category term="KVO" scheme="http://yoursite.com/tags/KVO/"/>
    
  </entry>
  
  <entry>
    <title>Git使用手册</title>
    <link href="http://yoursite.com/2016/01/11/1601TheUsageOfGitBash/"/>
    <id>http://yoursite.com/2016/01/11/1601TheUsageOfGitBash/</id>
    <published>2016-01-11T15:27:46.000Z</published>
    <updated>2016-06-30T14:30:46.220Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://ninghao.net/blog/1379&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git 入门手册&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git教程&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.jeffjade.com/2014/12/22/2014-12-22-gitmemo/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git常用命令备忘&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://blog.6ag.cn/978.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;常用Git命令合集&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xso8o.com1.z0.glb.clouddn.com/imagesync%2F160428%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%2F%E6%95%B0%E6%8D%AE%E5%B0%81%E8%A3%85.jpg&quot; alt=&quot;1&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xso8o.com1.z0.glb.clouddn.com/imagesync%2F160428%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%2FIP%E5%9C%B0%E5%9D%80%E7%BB%93%E6%9E%84.jpg&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      Git是一个优秀的分布式版本控制系统，是未来版本控制的趋势。
    
    </summary>
    
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Markdown语法 与 Hexo常用指令</title>
    <link href="http://yoursite.com/2015/05/05/1503HexoAndMarkdown/"/>
    <id>http://yoursite.com/2015/05/05/1503HexoAndMarkdown/</id>
    <published>2015-05-05T08:38:10.000Z</published>
    <updated>2016-06-26T05:43:17.411Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/Markdown&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown&lt;/a&gt;是一种超轻量级的&lt;code&gt;标记语言&lt;/code&gt;，常用的标记符号不超过十个，相对于更为复杂的&lt;code&gt;HTML标记语言&lt;/code&gt;来讲，&lt;code&gt;Markdown&lt;/code&gt;实在简便多了，因此学习成本也不是很大。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;更多关于Markdown的认识，我们可以参考：&lt;a href=&quot;http://sspai.com/25137/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;认识与入门 Markdown&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Markdown工具&quot;&gt;&lt;a href=&quot;#Markdown工具&quot; class=&quot;headerlink&quot; title=&quot;Markdown工具&quot;&gt;&lt;/a&gt;Markdown工具&lt;/h2&gt;&lt;p&gt;关于支持&lt;strong&gt;Markdown的书写工具&lt;/strong&gt;网络上有很多推荐，这里不再一一列举，常用的有：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://mouapp.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mou&lt;/a&gt;&lt;/strong&gt;：外文世界对 MarkDown 的热衷在 Mac 上可见一斑，目前虽是免费的，但功能性却能比肩同类的收费软件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://www.sublimetext.com/3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sublime Text 3&lt;/a&gt;&lt;/strong&gt;：支持 OS X、Windows、Ubuntu 等 UNIX 及 Linux 操作系统，在代码工作者圈内相当出名。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://www.markdownpad.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MarkdownPad2&lt;/a&gt;&lt;/strong&gt;：推荐较多，但是免费版的有些扩展功能受限。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://markdown.xiaoshujiang.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;小书匠&lt;/a&gt;&lt;/strong&gt;：有&lt;strong&gt;&lt;a href=&quot;http://markdown.xiaoshujiang.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;网页版&lt;/a&gt;&lt;/strong&gt;和&lt;strong&gt;&lt;a href=&quot;http://soft.xiaoshujiang.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;客户端&lt;/a&gt;&lt;/strong&gt;: 支持实时同步预览，编辑器同步滚动，多种系统内置的主题等特点。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://www.jianshu.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;简书&lt;/a&gt;&lt;/strong&gt;：是一家由国内初创团队建立的在线文字创作及发布平台。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.zybuluo.com/mdeditor&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Cmd Markdown&lt;/a&gt;&lt;/strong&gt;：Windows/Mac/Linux 全平台客户端。&lt;/p&gt;
&lt;h2 id=&quot;常用语法&quot;&gt;&lt;a href=&quot;#常用语法&quot; class=&quot;headerlink&quot; title=&quot;常用语法&quot;&gt;&lt;/a&gt;常用语法&lt;/h2&gt;&lt;h3 id=&quot;常见格式及其对应的语法：&quot;&gt;&lt;a href=&quot;#常见格式及其对应的语法：&quot; class=&quot;headerlink&quot; title=&quot;常见格式及其对应的语法：&quot;&gt;&lt;/a&gt;常见格式及其对应的语法：&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xso8o.com1.z0.glb.clouddn.com/imagesync%2FMark.png&quot; alt=&quot;Markdown&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注释与示例:&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;粗体&quot;&gt;&lt;a href=&quot;#粗体&quot; class=&quot;headerlink&quot; title=&quot;粗体&quot;&gt;&lt;/a&gt;粗体&lt;/h3&gt;&lt;p&gt;在字体两侧分别加两个星号 ** ， 当然，也能使用快捷键 Ctrl + B 快速加粗；&lt;/p&gt;
&lt;h3 id=&quot;斜体&quot;&gt;&lt;a href=&quot;#斜体&quot; class=&quot;headerlink&quot; title=&quot;斜体&quot;&gt;&lt;/a&gt;斜体&lt;/h3&gt;&lt;p&gt;将需要设置为斜体的文字两端使用一个 * （或者 _ ） 夹起来，快捷键 Ctrl + I ；&lt;/p&gt;
&lt;h3 id=&quot;删除线&quot;&gt;&lt;a href=&quot;#删除线&quot; class=&quot;headerlink&quot; title=&quot;删除线&quot;&gt;&lt;/a&gt;删除线&lt;/h3&gt;&lt;p&gt;在需要设置删除线的文字两侧加两个波浪线 ~~ 夹起来，可以表示&lt;del&gt;删除文字&lt;/del&gt;；&lt;/p&gt;
&lt;h3 id=&quot;分割线&quot;&gt;&lt;a href=&quot;#分割线&quot; class=&quot;headerlink&quot; title=&quot;分割线&quot;&gt;&lt;/a&gt;分割线&lt;/h3&gt;&lt;p&gt;分割线的语法只需要三个星号&lt;code&gt;*&lt;/code&gt;或者三个小短线 &lt;code&gt;-&lt;/code&gt; 号，例如：&lt;/p&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;h3 id=&quot;外链接&quot;&gt;&lt;a href=&quot;#外链接&quot; class=&quot;headerlink&quot; title=&quot;外链接&quot;&gt;&lt;/a&gt;外链接&lt;/h3&gt;&lt;p&gt;[描述](链接地址) 为文字添加外链接，可以使用快捷键 Ctrl + L 快速设置；&lt;br&gt;示例： &lt;code&gt;[HarbingWang的博客](http://harbingwang.github.io)&lt;/code&gt;&lt;br&gt;显示： 这里是&lt;a href=&quot;http://harbingwang.github.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HarbingWang的博客&lt;/a&gt; 链接。&lt;/p&gt;
&lt;h3 id=&quot;内嵌代码&quot;&gt;&lt;a href=&quot;#内嵌代码&quot; class=&quot;headerlink&quot; title=&quot;内嵌代码&quot;&gt;&lt;/a&gt;内嵌代码&lt;/h3&gt;&lt;p&gt;第一种:引入单行代码出现一个代码框，需要使用键盘左上角的ESC键下面的反单引号夹在文字两侧，两侧各一个就行。&lt;/p&gt;
&lt;p&gt;例如：\&lt;code&gt;Hellow world！&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;显示：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Hellow world！&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;第二种：多行代码的引入需要在代码段的前后分别使用三个反单引号&lt;/p&gt;
&lt;p&gt;显示：&lt;br&gt;&lt;figure class=&quot;highlight hsp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;; i &amp;lt; 100; i++)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      printf(&lt;span class=&quot;string&quot;&gt;&quot;hello markdown!\n&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;引入内容&quot;&gt;&lt;a href=&quot;#引入内容&quot; class=&quot;headerlink&quot; title=&quot;引入内容&quot;&gt;&lt;/a&gt;引入内容&lt;/h3&gt;&lt;p&gt;第一种:通过在文字开头添加“&amp;gt;”表示块注释，快捷键使用 Ctrl + Q 例如；&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你无法简洁的表达你的想法，那只说明你还不够了解它。 – 阿尔伯特·爱因斯坦&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第二种: 使用&lt;code&gt;tab键&lt;/code&gt;或者&lt;code&gt;四个空格&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;一个项目两部电脑三餐盒饭只为四千工资搞得五脏俱损六神无主仍然七点起床八点开会处理九个漏洞十分辛苦 
十年编码九年加班八面无光忙的七窍生烟到头六亲不认五体投地依旧四肢酸软三更加班只为二个臭钱一生孤苦
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;插入图片&quot;&gt;&lt;a href=&quot;#插入图片&quot; class=&quot;headerlink&quot; title=&quot;插入图片&quot;&gt;&lt;/a&gt;插入图片&lt;/h3&gt;&lt;p&gt;插入图片的语法与插入链接很像，区别在一个插入图片的时候需要加一个&lt;code&gt;!&lt;/code&gt;号&lt;/p&gt;
&lt;p&gt;Markdown语法： ![描述](图片链接地址)&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xso8o.com1.z0.glb.clouddn.com/imagesync%2Funtitled.png&quot; alt=&quot;Github&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;插入图片的地址需要图床生成图片外链，这里推荐使用&lt;a href=&quot;https://portal.qiniu.com/signup?code=3liikxpwgqm36&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;七牛图床&lt;/a&gt;，生成URL地址即可。&lt;/li&gt;
&lt;li&gt;不同Markdown工具下插入图片的方式也有所不同，这里只说明通用做法，具体可参考编辑器的使用说明；&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;分级标题&quot;&gt;&lt;a href=&quot;#分级标题&quot; class=&quot;headerlink&quot; title=&quot;分级标题&quot;&gt;&lt;/a&gt;分级标题&lt;/h3&gt;&lt;p&gt;标题是每篇文章中最常用的格式，在Markdown语法中，如果某行文字被定义为标题，只需要在行首加上&lt;code&gt;#&lt;/code&gt;符号即可：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;H1 : # Header 1
H2 : ## Header 2
H3 : ### Header 3
H4 : #### Header 4
H5 : ##### Header 5
H6 : ###### Header 6
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;是几级标题就用几个 # 符号，每增加一个 # 表示更深入一个层次的内容，总共有六级标题。&lt;/li&gt;
&lt;li&gt;标准的Markdown语法需要在符号后面多加一个空格，建议加上。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面这种设置标题的方式是最为直观的，当然在Markdown语法下，我们也可以通过在文字下方添加“=”和“-”，他们分别表示一级标题和二级标题，例如:&lt;/p&gt;
&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;我是一级标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;====&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;我是二级标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;----&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;无序列表&quot;&gt;&lt;a href=&quot;#无序列表&quot; class=&quot;headerlink&quot; title=&quot;无序列表&quot;&gt;&lt;/a&gt;无序列表&lt;/h3&gt;&lt;p&gt;使用一个 &lt;code&gt;*&lt;/code&gt;，&lt;code&gt;+&lt;/code&gt;或&lt;code&gt;-&lt;/code&gt; 表示无序列表。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无序列表项 一&lt;/li&gt;
&lt;li&gt;无序列表项 二&lt;/li&gt;
&lt;li&gt;无序列表项 三&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;有序列表&quot;&gt;&lt;a href=&quot;#有序列表&quot; class=&quot;headerlink&quot; title=&quot;有序列表&quot;&gt;&lt;/a&gt;有序列表&lt;/h3&gt;&lt;p&gt;使用数字和英文句点表示有序列表, 不要求数字一定要连续。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;有序列表项 一&lt;/li&gt;
&lt;li&gt;有序列表项 二&lt;/li&gt;
&lt;li&gt;有序列表项 三&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;绘制表格&quot;&gt;&lt;a href=&quot;#绘制表格&quot; class=&quot;headerlink&quot; title=&quot;绘制表格&quot;&gt;&lt;/a&gt;绘制表格&lt;/h3&gt;&lt;figure class=&quot;highlight gherkin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; Tables        &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Are           &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Cool  &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; ------------- &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;:-------------:&lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; -----:&lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; col 3 is      &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; right-aligned &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; $1600 &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; col 2 is      &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; centered      &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;   $12 &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; zebra stripes &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; are neat      &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;    $1 &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tables&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Are&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;Cool&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;col 3 is&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;right-aligned&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;$1600&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;col 2 is&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;centered&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;$12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;zebra stripes&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;are neat&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;$1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;反斜杠&quot;&gt;&lt;a href=&quot;#反斜杠&quot; class=&quot;headerlink&quot; title=&quot;反斜杠&quot;&gt;&lt;/a&gt;反斜杠&lt;/h3&gt;&lt;p&gt;Markdown 支持在以下这些符号前面加上反斜杠来帮助插入普通的符号：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\   反斜线
`   反引号
*   星号
_   底线
{}  花括号
[]  方括号
()  括弧
#   井字号
+   加号
-   减号
.   英文句点
!   惊叹号
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt; 以上的Markdown语法基本上足够我们书写一篇博客了，关于Markdown的高级用法，包括通过Markdown创建公式，绘制流程图等请参考本文底部的 Reference相关；&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Hexo常用指令&quot;&gt;&lt;a href=&quot;#Hexo常用指令&quot; class=&quot;headerlink&quot; title=&quot;Hexo常用指令&quot;&gt;&lt;/a&gt;Hexo常用指令&lt;/h2&gt;&lt;p&gt;以下关于Hexo常用指令的整理，要想熟练使用一个工具，首先就要熟练掌握他的相关指令，以便操控这一工具。下面将着重介绍几条常用的 Hexo 指令：&lt;/p&gt;
&lt;h3 id=&quot;1、新建文章&quot;&gt;&lt;a href=&quot;#1、新建文章&quot; class=&quot;headerlink&quot; title=&quot;1、新建文章&quot;&gt;&lt;/a&gt;1、新建文章&lt;/h3&gt;&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; articleName&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;　&lt;strong&gt;Note：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新建一篇题为“articleName”的文章，此时会在E/Hexo/source/_posts/目录下生成一份articleName.md 的文件，使用Notepad++、小书匠、MarkdownPad2等编辑工具打开即能书写；&lt;/li&gt;
&lt;li&gt;提示信息：INFO  Created: E:\Hexo\source_posts\articleName.md &lt;/li&gt;
&lt;li&gt;如果标题包含空格，需要使用双引号括起来&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;2、新建页面&quot;&gt;&lt;a href=&quot;#2、新建页面&quot; class=&quot;headerlink&quot; title=&quot;2、新建页面&quot;&gt;&lt;/a&gt;2、新建页面&lt;/h3&gt;&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; page pageName&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;　&lt;strong&gt;Note：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新建一个题为“pageName”的页面，此时会在E:\Hexo\source\目录下生成一个名为pageName的文件夹，其中包含一份 index 的md文件；&lt;/li&gt;
&lt;li&gt;提示信息：INFO  Created: E:\Hexo\source\pageName\index.md&lt;/li&gt;
&lt;li&gt;同样地，如果语句中包含空格，需要使用双引号括起来&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;3、生成静态页面&quot;&gt;&lt;a href=&quot;#3、生成静态页面&quot; class=&quot;headerlink&quot; title=&quot;3、生成静态页面&quot;&gt;&lt;/a&gt;3、生成静态页面&lt;/h3&gt;&lt;figure class=&quot;highlight gcode&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo &lt;span class=&quot;keyword&quot;&gt;ge&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;nerate&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;启动该条指令后会将当前网页的内容生成静态页面到public目录下&lt;/li&gt;
&lt;li&gt;提示信息：&lt;br&gt;  INFO  Start processing&lt;br&gt;  INFO  Files loaded in 595 ms&lt;br&gt;  INFO  0 files generated in 612 ms&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;4、开启本地服务器端口&quot;&gt;&lt;a href=&quot;#4、开启本地服务器端口&quot; class=&quot;headerlink&quot; title=&quot;4、开启本地服务器端口&quot;&gt;&lt;/a&gt;4、开启本地服务器端口&lt;/h3&gt;&lt;figure class=&quot;highlight axapta&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo &lt;span class=&quot;keyword&quot;&gt;server&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开启预览访问的端口，默认端口为4000&lt;/li&gt;
&lt;li&gt;关闭server使用 ctrl + c  &lt;/li&gt;
&lt;li&gt;提示信息：&lt;br&gt;  INFO  Start processing&lt;br&gt;  INFO  Hexo is running at &lt;a href=&quot;http://0.0.0.0:4000/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://0.0.0.0:4000/&lt;/a&gt;. Press Ctrl+C to stop.&lt;/li&gt;
&lt;li&gt;在使用hexo server 可能会遇到端口被占用的情况，不妨使用以下指令来更改端口&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo server -&lt;span class=&quot;selector-tag&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;4001&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;5、部署到Github&quot;&gt;&lt;a href=&quot;#5、部署到Github&quot; class=&quot;headerlink&quot; title=&quot;5、部署到Github&quot;&gt;&lt;/a&gt;5、部署到Github&lt;/h3&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;hexo&lt;/span&gt; deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将 E/Hexo/目录下的 .deploy_git 文件夹部署到Github&lt;/li&gt;
&lt;li&gt;部署前需要预先 hexo generate 生成静态文件&lt;/li&gt;
&lt;li&gt;关闭server使用 ctrl + c  &lt;/li&gt;
&lt;li&gt;提示信息：&lt;br&gt;INFO  Deploying: git&lt;br&gt;INFO  Clearing .deploy_git folder…&lt;br&gt;INFO  Copying files from public folder…&lt;br&gt;…..部署的文件&lt;br&gt;To git@github.com:HarbingWang/harbingwang.github.io.git&lt;br&gt; da818a3..e4e53c6  HEAD -&amp;gt; master&lt;br&gt;INFO  Deploy done: git  # 当看到 “INFO  Deploy done: git”时即表示部署已经完成；&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;6、清除文件&quot;&gt;&lt;a href=&quot;#6、清除文件&quot; class=&quot;headerlink&quot; title=&quot;6、清除文件&quot;&gt;&lt;/a&gt;6、清除文件&lt;/h3&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;hexo&lt;/span&gt; clean&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;清除E/Hexo目录下的缓存文件（db.json）和已经生成的静态文件（public）文件&lt;/li&gt;
&lt;li&gt;网页正常情况下可以忽略此条命令&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;7、查看Hexo版本&quot;&gt;&lt;a href=&quot;#7、查看Hexo版本&quot; class=&quot;headerlink&quot; title=&quot;7、查看Hexo版本&quot;&gt;&lt;/a&gt;7、查看Hexo版本&lt;/h3&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo &lt;span class=&quot;built_in&quot;&gt;version&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查看当前使用的Hexo的版本号&lt;/li&gt;
&lt;li&gt;提示信息：&lt;br&gt;hexo: 3.2.0&lt;br&gt;hexo-cli: 1.0.1&lt;br&gt;os: Windows_NT 6.1.7601 win32 x64&lt;br&gt;http_parser: 2.6.2&lt;br&gt;node: 5.10.0&lt;br&gt;v8: 4.6.85.31&lt;br&gt;uv: 1.8.0&lt;br&gt;zlib: 1.2.8&lt;br&gt;ares: 1.10.1-DEV&lt;br&gt;icu: 56.1&lt;br&gt;modules: 47&lt;br&gt;openssl: 1.0.2g&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;复合指令&quot;&gt;&lt;a href=&quot;#复合指令&quot; class=&quot;headerlink&quot; title=&quot;复合指令&quot;&gt;&lt;/a&gt;复合指令&lt;/h2&gt;&lt;figure class=&quot;highlight cos&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo g -&lt;span class=&quot;keyword&quot;&gt;d&lt;/span&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo &lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt; -&lt;span class=&quot;keyword&quot;&gt;d&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;hexo g -d  # 等价于 hexo generate –deploy ：生成静态文件并部署&lt;/li&gt;
&lt;li&gt;hexo s -d  # 等价于 hexo deploy –generate ：开启预览并部署到Github&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;简写形式&quot;&gt;&lt;a href=&quot;#简写形式&quot; class=&quot;headerlink&quot; title=&quot;简写形式&quot;&gt;&lt;/a&gt;简写形式&lt;/h2&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;hexo&lt;/span&gt; n &lt;span class=&quot;comment&quot;&gt;#等价于 hexo new&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo g &lt;span class=&quot;comment&quot;&gt;#等价于 hexo generate&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo s &lt;span class=&quot;comment&quot;&gt;#等价于 hexo server&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo d &lt;span class=&quot;comment&quot;&gt;#等价于 hexo deploy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo v &lt;span class=&quot;comment&quot;&gt;#等价于 hexo version&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;如何卸载Hexo？&quot;&gt;&lt;a href=&quot;#如何卸载Hexo？&quot; class=&quot;headerlink&quot; title=&quot;如何卸载Hexo？&quot;&gt;&lt;/a&gt;如何卸载Hexo？&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;3.0.0版本执行npm uninstall hexo-cli -g，之前版本执行npm uninstall hexo -g&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;##　如何安装旧版本Hexo？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;　先卸载当前版本，以2.8.3为例，执行npm install hexo@2.8.3 -g，再初始化并安装依赖和插件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;Reference&lt;/h2&gt;&lt;p&gt;整理过程中难免有所疏漏，失误之处还请指正，更多详细内容请参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://sspai.com/25137/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;认识与入门 Markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://sspai.com/27792&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;解决作者们的焦虑：7 款优秀 Markdown 编辑工具推荐&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/1e402922ee32/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown——入门指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.wikimilk.org/markdown-guide/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown：指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000002632530?utm_source=tuicool&amp;amp;utm_medium=referral&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo常用命令笔记&lt;/a&gt;   【&lt;strong&gt;推荐&lt;/strong&gt;】&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.jikexueyuan.com/project/hexo-document/commands.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;极客学院Hexo中文版指令&lt;/a&gt;   【&lt;strong&gt;推荐&lt;/strong&gt;】&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/05289a4bc8b2#&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何搭建一个独立博客——简明Github Pages与Hexo教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/Markdown&quot;&gt;Markdown&lt;/a&gt;是一种超轻量级的&lt;code&gt;标记语言&lt;/code&gt;，常用的标记符号不超过十个，相对于更为复杂的&lt;code&gt;HTML标记语言&lt;/code&gt;来讲，&lt;code&gt;Markdown&lt;/code&gt;实在简便多了，因此学习成本也不是很大。&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="Markdown" scheme="http://yoursite.com/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>个人博客搭建与优化</title>
    <link href="http://yoursite.com/2015/04/25/1502PersonalBlogProgressing/"/>
    <id>http://yoursite.com/2015/04/25/1502PersonalBlogProgressing/</id>
    <published>2015-04-25T05:11:21.000Z</published>
    <updated>2016-06-30T14:29:23.339Z</updated>
    
    <content type="html">&lt;p&gt;&lt;/p&gt;&lt;h2 id=&quot;intro&quot;&gt;前  言&lt;/h2&gt;恰逢清明时节，本打算和小伙伴去帝都摄影啥的，无奈人算不如天算，计划赶不上变化。然一想节假日景点人口爆满，索性退了票准备蜗居寝室几天集中折腾下自己想来已久的个人博客。由此便开始我的折腾之路…此博客主要用来记录自己在创建个人博客方面的一些尝试和经验，欢迎各位同好提意见和建议。&lt;p&gt;&lt;/p&gt;
&lt;h3 id=&quot;04-11-为页面添加一个-Github-的-“Fork-me-on-Github”-彩带&quot;&gt;&lt;a href=&quot;#04-11-为页面添加一个-Github-的-“Fork-me-on-Github”-彩带&quot; class=&quot;headerlink&quot; title=&quot;04.11 为页面添加一个 Github 的 “Fork me on Github” 彩带&quot;&gt;&lt;/a&gt;04.11 为页面添加一个 Github 的 “Fork me on Github” 彩带&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;到Github提供的&lt;a href=&quot;https://github.com/blog/273-github-ribbons&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;纽带样式&lt;/a&gt;中挑选一款，然后复制相对的代码&lt;br&gt;将代码粘贴到 theme\layout\layout.ejs中，放置在 最后，标签之前即可。&lt;br&gt;将代码里面的 将you改为你自己的github上的注册名即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;04-09-七牛图床&quot;&gt;&lt;a href=&quot;#04-09-七牛图床&quot; class=&quot;headerlink&quot; title=&quot;04.09 七牛图床&quot;&gt;&lt;/a&gt;04.09 七牛图床&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;使用&lt;a href=&quot;https://portal.qiniu.com/signup?code=3liikxpwgqm36&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;七牛云存储&lt;/a&gt;保存图片，通过七牛的图片外链进行网页图片的加载&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;04-07-自定义多说评论框样式&quot;&gt;&lt;a href=&quot;#04-07-自定义多说评论框样式&quot; class=&quot;headerlink&quot; title=&quot;04.07 自定义多说评论框样式&quot;&gt;&lt;/a&gt;04.07 自定义多说评论框样式&lt;/h3&gt;&lt;p&gt;使用百度分享将我的主页分享至微信微博和QQ好友；&lt;br&gt;增加多说评论框；&lt;br&gt;&lt;a href=&quot;https://github.com/HarbingWang/harbingwang.github.io/commit/1215d97ed2a99e12d3895121c9fab1f0dbeef3cb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;G&lt;/a&gt;自定义多说的的CSS样式，修改多说评论框的动画效果，让其交互性更好；&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;登录&lt;a href=&quot;http://harbingwang1.duoshuo.com/admin/settings/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;多说后台&lt;/a&gt;-&amp;gt;设置-&amp;gt;基本设置-&amp;gt;自定义CSS&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wsgzao.github.io/post/duoshuo/#多说后台自定义CSS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;多说评论显示UA(User Agent)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;1.&lt;a href=&quot;http://harbingwang.github.io/js/embed.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载&lt;/a&gt;embed.js &lt;/li&gt;
&lt;li&gt;2.获取多说ID&lt;/li&gt;
&lt;li&gt;3.本地修改embed.js&lt;/li&gt;
&lt;li&gt;4.上传embed.js&lt;/li&gt;
&lt;li&gt;5.修改多说调用地址&lt;/li&gt;
&lt;li&gt;6.多说后台自定义CSS&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;04-06-逐步优化&quot;&gt;&lt;a href=&quot;#04-06-逐步优化&quot; class=&quot;headerlink&quot; title=&quot;04.06 逐步优化&quot;&gt;&lt;/a&gt;04.06 逐步优化&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;定制侧边目录栏，暂且分为以下几个栏目：&lt;br&gt;&lt;a href=&quot;/archives/&quot;&gt;所有文章&lt;/a&gt; ：检索所有文章，其实这个版块一直很犹豫&lt;br&gt;&lt;a href=&quot;/tags/&quot;&gt;标签云图&lt;/a&gt; ：通过 Tag 将文章分类，减轻找文章的负担&lt;br&gt;&lt;a href=&quot;/books/&quot;&gt;静心阅读&lt;/a&gt; ：总结并分享一些自己看过的书籍及读后感&lt;br&gt;&lt;a href=&quot;/photos/&quot;&gt;品味摄影&lt;/a&gt; ：个人爱好，喜欢拍照，希望这个版块能够逐渐做起来&lt;br&gt;&lt;a href=&quot;/about/&quot;&gt;雁过留声&lt;/a&gt; ：为同好提供一个分享交流的独立版块，我期待您的声音&lt;br&gt;为&lt;a href=&quot;/about/&quot;&gt;雁过留声&lt;/a&gt;栏目添加网易云音乐的播放器外链，分享一些个人比较喜欢的音乐；&lt;br&gt;在&lt;code&gt;main.style&lt;/code&gt;文件中将原主题的纯背景色改为图片背景样式；&lt;br&gt;　查阅相关&lt;a href=&quot;https://github.com/MOxFIVE/hexo-theme-yelee&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文档&lt;/a&gt;，通过添加代码实现首页只显示文章摘要&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;摘要结束的地方添加分段代码  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- more --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;Excerpt&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;index&lt;/span&gt; | 首页摘要&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- more --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rest&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;contents&lt;/span&gt; | 余下全文&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;04-05-更换主题&quot;&gt;&lt;a href=&quot;#04-05-更换主题&quot; class=&quot;headerlink&quot; title=&quot;04.05 更换主题&quot;&gt;&lt;/a&gt;04.05 更换主题&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;在&lt;a href=&quot;https://hexo.io/themes/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo官方主题&lt;/a&gt;中折腾了&lt;a href=&quot;https://github.com/iissnan/hexo-theme-next&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NexT&lt;/a&gt; &lt;a href=&quot;https://github.com/raytaylorlin/hexo-theme-raytaylorism&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Raytaylorism&lt;/a&gt; &lt;a href=&quot;https://github.com/MOxFIVE/hexo-theme-yelee&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;yelee&lt;/a&gt;等几款主题之后，由于个人比较喜欢美图和动画效果，所以最终确定了&lt;a href=&quot;http://luuman.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;luuman&lt;/a&gt;提供的主题&lt;a href=&quot;https://github.com/luuman/hexo-theme-spfk&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;spfk&lt;/a&gt;，打算在此基础上打造自己的主题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;04-04-搭建完成&quot;&gt;&lt;a href=&quot;#04-04-搭建完成&quot; class=&quot;headerlink&quot; title=&quot;04.04 搭建完成&quot;&gt;&lt;/a&gt;04.04 搭建完成&lt;/h3&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;经过两天的折腾，个人博客已经初步搭建完毕，当看到那道蓝色星球上梦幻般的白光时，那叫一个激动啊…我知道，我离我要的结果越来越近了，YEAH！&lt;code&gt;不要怂，就是怼！&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;学习&lt;a href=&quot;http://harbingwang.github.io/2016/04/05/201602HexoAndMarkdown/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdone语法与Hexo指令&lt;/a&gt;，为后期写文章做准备；&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;04-02-配置环境并搭建&quot;&gt;&lt;a href=&quot;#04-02-配置环境并搭建&quot; class=&quot;headerlink&quot; title=&quot;04.02 配置环境并搭建&quot;&gt;&lt;/a&gt;04.02 配置环境并搭建&lt;/h3&gt;&lt;p&gt;关于具体的配置过程，请参考：&lt;a href=&quot;http://harbingwang.github.io/2016/04/06/201603HexoWithGithub/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用Hexo搭建静态博客并部署到Github&lt;/a&gt; &lt;/p&gt;
&lt;h3 id=&quot;参考：&quot;&gt;&lt;a href=&quot;#参考：&quot; class=&quot;headerlink&quot; title=&quot;参考：&quot;&gt;&lt;/a&gt;参考：&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/zhcncn/p/4097881.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo搭建Github静态博客&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://llqy.github.io/2016/03/11/hexo-%E9%83%A8%E7%BD%B2%E9%9D%99%E6%80%81blog%E4%BA%8Egithub/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo 部署静态blog于github&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://ninghao.net/blog/1412&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用 Hexo 生成一套静态博客网页&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.jianshu.com/p/05289a4bc8b2#&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何搭建一个独立博客&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://eric.ec/blog/hexo-independent-blog-new-ways.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo：独立博客新玩法&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.jianshu.com/p/a2023a601ceb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo–搭建&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://echovic.github.io/2016/03/03/My-New-Post/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;搭建Hexo个人博客部署到github&lt;/a&gt; &lt;/p&gt;
</content>
    
    <summary type="html">
    
      本篇博客主要用来记录自己在创建个人博客方面的一些尝试和经验，欢迎各位同好提意见和建议。
    
    </summary>
    
      <category term="博客搭建" scheme="http://yoursite.com/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="GitHub" scheme="http://yoursite.com/tags/GitHub/"/>
    
      <category term="Markdown" scheme="http://yoursite.com/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Hexo搭建静态博客</title>
    <link href="http://yoursite.com/2015/04/01/1501HexoWithGithub/"/>
    <id>http://yoursite.com/2015/04/01/1501HexoWithGithub/</id>
    <published>2015-04-01T05:11:21.000Z</published>
    <updated>2016-06-30T14:28:56.534Z</updated>
    
    <content type="html">&lt;div class=&quot;github-widget&quot; data-repo=&quot;HarbingWang/harbingwang.github.io&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Hexo&lt;/strong&gt; 是一个基于&lt;a href=&quot;https://nodejs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Node.js&lt;/a&gt;技术开发的纯静态博客系统，英文谐音“黑客”，听起来就很炫酷。Hexo具有简介、高效的特点，它能在几秒内将几百个文件快速生成静态网页，并且支持&lt;a href=&quot;http://baike.baidu.com/link?url=4XofL-iZHmVBC1ItR0WE8qHCiFyINe-MdwBXFFCvk_3rdUXu9-Bgw7R8LG3wlxt8KX5vpraWJc34QLjJUtuHga&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown&lt;/a&gt;语法，因此近年来越来越多的程序员和博主们开始青睐于使用Hexo搭建个人博客。与&lt;a href=&quot;https://cn.wordpress.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Wordpress&lt;/a&gt;相似，我们可以使用Hexo创建自己的博客，并且托管在&lt;a href=&quot;https://pages.github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHubPages&lt;/a&gt;等平台上面，当然也能绑定自己的域名，打造专属自己的网站。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xso8o.com1.z0.glb.clouddn.com/imagesync%2Fhexo%2Bgithub.png&quot; alt=&quot;Hexo + Github&quot;&gt;&lt;/p&gt;
&lt;p&gt;在我搭建博客初期一直有一个困惑，到底需不需要预先购买独立域名呢？答案是否定的！建设初期完全不需要预先购买域名，如果后期需要再购买也不迟。现在普遍流行的搭建方案是使用Hexo将我们写好的文件生成静态网页（关于如何生成，不必为此烦恼，在后面的环节中，只需要一句代码即可完成生成），随后，我们可以通过本地服务器预览我们的搭建效果；进行到这里，由于只是生成静态网页保存在本地，并不能通过链接进行访问，此时我们我们就需要一个更加强大的工具 —— &lt;code&gt;GithubPages&lt;/code&gt;,来帮助我们部署博客，这些在文章后面都会有所有所涉及；关于使用Hexo搭建静态博客并部署到的教程，网络上有很多现成的教程，按部就班一般都能完成搭建。介于不同操作系统下部分步骤已有所不同，因此本文&lt;code&gt;Win7&lt;/code&gt;环境下的搭建流程。整理过程中难免有所疏漏与失误，还请指正。&lt;/p&gt;
&lt;p&gt;以下我们将分三大步完成这次搭建：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;配置搭建环境&lt;/li&gt;
&lt;li&gt;安装Hexo&lt;/li&gt;
&lt;li&gt;配置和和使用 Github &lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;配置环境&quot;&gt;&lt;a href=&quot;#配置环境&quot; class=&quot;headerlink&quot; title=&quot;配置环境&quot;&gt;&lt;/a&gt;配置环境&lt;/h2&gt;&lt;p&gt;工欲善其事必先利其器，在搭建之前，我们需要使用几个工具来配置下我们的搭建环境：&lt;/p&gt;
&lt;h3 id=&quot;下载并安装-Node-js&quot;&gt;&lt;a href=&quot;#下载并安装-Node-js&quot; class=&quot;headerlink&quot; title=&quot;下载并安装 Node.js&quot;&gt;&lt;/a&gt;下载并安装 Node.js&lt;/h3&gt;&lt;p&gt;由于 Hexo 是基于 Node.js 的第三方模块，所以缺少 Node.js 不可。请自行前往&lt;a href=&quot;http://nodejs.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Node.js官网&lt;/a&gt;下载适合自己系统的版本进行安装，安装过程一路保持默认设置即可。&lt;/p&gt;
&lt;h3 id=&quot;下载并安装-Git&quot;&gt;&lt;a href=&quot;#下载并安装-Git&quot; class=&quot;headerlink&quot; title=&quot;下载并安装　Git&quot;&gt;&lt;/a&gt;下载并安装　Git&lt;/h3&gt;&lt;p&gt;我们在搭建博客的过程中，可能会需要使用到一些关于Hexo的主题和插件，使用 &lt;a href=&quot;https://git-scm.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git&lt;/a&gt; 是最好的下载方式，前往&lt;a href=&quot;https://www.git-scm.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git官网下载&lt;/a&gt;下载对应的版本，安装Git，同样地，一路保持默认就行。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;打开 Git 的两种方式：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开始 -&amp;gt;　Git -&amp;gt; Git Bash&lt;/li&gt;
&lt;li&gt;鼠标右键选择　Git Bash　，打开后是一个黑色的命令框，Git的相关操作都在这个界面使用命令行来完成；&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;安装-Notepad-或-Sublime-Text3&quot;&gt;&lt;a href=&quot;#安装-Notepad-或-Sublime-Text3&quot; class=&quot;headerlink&quot; title=&quot;安装 Notepad++  或  Sublime Text3&quot;&gt;&lt;/a&gt;安装 &lt;a href=&quot;https://notepad-plus-plus.org/download/v6.9.1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Notepad++&lt;/a&gt;  或  &lt;a href=&quot;http://www.sublimetext.com/3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sublime Text3&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;在此，Notepad++ 和 Sublime Text只是作为文本编辑器进行使用，他们支持多种编程语言和文件格式，同时也支持Markdown语法，是不可多得的练码奇才，笔者习惯使用Notepad++进行文本的编辑操作。&lt;/p&gt;
&lt;h2 id=&quot;安装-Hexo&quot;&gt;&lt;a href=&quot;#安装-Hexo&quot; class=&quot;headerlink&quot; title=&quot;安装 Hexo&quot;&gt;&lt;/a&gt;安装 Hexo&lt;/h2&gt;&lt;p&gt;以上是对博客搭建环境的配置，下面开始我们正式的搭建步骤：&lt;/p&gt;
&lt;h3 id=&quot;新建本地文件夹&quot;&gt;&lt;a href=&quot;#新建本地文件夹&quot; class=&quot;headerlink&quot; title=&quot;新建本地文件夹&quot;&gt;&lt;/a&gt;新建本地文件夹&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;在电脑上选择一个盘，新建一个文件夹，并命名为 &lt;code&gt;Hexo&lt;/code&gt; (我的是 E:\Hexo 一下叫做 目标目录)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;打开-Git-Bash-Here&quot;&gt;&lt;a href=&quot;#打开-Git-Bash-Here&quot; class=&quot;headerlink&quot; title=&quot;打开 Git Bash Here&quot;&gt;&lt;/a&gt;打开 Git Bash Here&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;双击 Hexo 文件夹进入，然后鼠标右键打开 &lt;code&gt;Git Bash Here&lt;/code&gt;，出现一个黑色的命令框，今后的操作均在此进行；&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;安装-Hexo-1&quot;&gt;&lt;a href=&quot;#安装-Hexo-1&quot; class=&quot;headerlink&quot; title=&quot;安装 Hexo&quot;&gt;&lt;/a&gt;安装 Hexo&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;安装过程可参考官方提供的 &lt;a href=&quot;https://github.com/hexojs/hexo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github教程&lt;/a&gt;&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-&lt;span class=&quot;keyword&quot;&gt;cli&lt;/span&gt; -&lt;span class=&quot;keyword&quot;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;安装依赖和插件&quot;&gt;&lt;a href=&quot;#安装依赖和插件&quot; class=&quot;headerlink&quot; title=&quot;安装依赖和插件&quot;&gt;&lt;/a&gt;安装依赖和插件&lt;/h3&gt;&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;此时Git会从网络下载插件和依赖，并在E:\Hexo 目标目录中安装生成node_modules 文件；&lt;/li&gt;
&lt;li&gt;由于 Git 从网络下载Hexo的插件和依赖的过程是访问外网，因此下载速度可能会相对较慢，一般不会超过十分钟；；&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;初始化文件夹&quot;&gt;&lt;a href=&quot;#初始化文件夹&quot; class=&quot;headerlink&quot; title=&quot;初始化文件夹&quot;&gt;&lt;/a&gt;初始化文件夹&lt;/h3&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;hexo&lt;/span&gt; init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;hexo init 后会自动在目标文件夹 Hexo 下生成搭建网站所需要的所有静态文件；&lt;/li&gt;
&lt;li&gt;尤其值得注意的是，初始化 init 操作一定要在 目标目录 下进行，否则会出错；&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;启动本地服务器&quot;&gt;&lt;a href=&quot;#启动本地服务器&quot; class=&quot;headerlink&quot; title=&quot;启动本地服务器&quot;&gt;&lt;/a&gt;启动本地服务器&lt;/h3&gt;&lt;figure class=&quot;highlight axapta&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo &lt;span class=&quot;keyword&quot;&gt;server&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;提示信息：&lt;/p&gt;
&lt;p&gt;  INFO  Start processing&lt;br&gt;  INFO  Hexo is running at &lt;a href=&quot;http://localhost:4000/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4000/&lt;/a&gt;. Press Ctrl+C to stop.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;默认端口为： 4000 ，在此过程中，如果遇到端口被占用的情况，不妨试试打开 4001 或者其他端口进行预览；&lt;/li&gt;
&lt;li&gt;使用 4001 端口进行预览&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo server -&lt;span class=&quot;selector-tag&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;4001&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;浏览器预览效果&quot;&gt;&lt;a href=&quot;#浏览器预览效果&quot; class=&quot;headerlink&quot; title=&quot;浏览器预览效果&quot;&gt;&lt;/a&gt;浏览器预览效果&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;在浏览器中打开  &lt;strong&gt;&lt;a href=&quot;http://localhost:4000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4000&lt;/a&gt;&lt;/strong&gt;  ，如果看到Hexo的原始页面【如下图所示】，则表示&lt;strong&gt;本地&lt;/strong&gt;静态博客搭建完成；&lt;/li&gt;
&lt;li&gt;正常情况下应该是最原始的Hexo画面，但如果看到的浏览器页面是一块白板和&lt;code&gt;Cannot GET /&lt;/code&gt;几个字时。其原因在于 &lt;strong&gt;Hexo2.6&lt;/strong&gt; 以后就更新了，我们需要手动配置些东西，我们需要输入下面三行命令：&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-renderer-ejs &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-renderer-stylus &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-renderer-marked &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个时候再 hexo generate 重新生成静态文件，并启动本地服务器：hexo server，点击网址 &lt;a href=&quot;http://0.0.0.0:4000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://0.0.0.0:4000&lt;/a&gt; 就能预览到我们想要的画面了；&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xso8o.com1.z0.glb.clouddn.com/imagesync%2F201604%2FImage2.png&quot; alt=&quot;Hexo&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;Hexo相关指令请参考：Markdown语法-与-Hexo常用指令&quot;&gt;&lt;a href=&quot;#Hexo相关指令请参考：Markdown语法-与-Hexo常用指令&quot; class=&quot;headerlink&quot; title=&quot;Hexo相关指令请参考：Markdown语法 与 Hexo常用指令&quot;&gt;&lt;/a&gt;Hexo相关指令请参考：&lt;a href=&quot;http://harbingwang.github.io/2016/04/05/201602HexoAndMarkdown/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown语法 与 Hexo常用指令&lt;/a&gt;&lt;/h3&gt;&lt;h2 id=&quot;配置和使用Github&quot;&gt;&lt;a href=&quot;#配置和使用Github&quot; class=&quot;headerlink&quot; title=&quot;配置和使用Github&quot;&gt;&lt;/a&gt;配置和使用Github&lt;/h2&gt;&lt;p&gt;以上操作我们只是简单地将文件生成本地静态文件保存在本地进行预览，要想让别人通过链接访问我们写的文章，那么需要借助于Github将这些数据托管到一个大仓库中。或许这里有小伙伴会有疑问，我们供别人访问的网址怎么来，需要购买域名了吗？答案还是NO！&lt;/p&gt;
&lt;p&gt;Github为我们提供了极大地便利，我们可以使用他提供的Pages服务。GitHub Pages 默认为每个注册用户分配了一个二级域名 your_user_name.github.com 或 your_user_name.github.io  如果你对上述域名不满意，可以自己去申请一个自己的域名，然后绑定到GitHub Pages。&lt;br&gt;绑定方法很简单，在repo根目录下建立一个CNAME文件，里面写上域名即可。&lt;/p&gt;
&lt;h3 id=&quot;注册Github&quot;&gt;&lt;a href=&quot;#注册Github&quot; class=&quot;headerlink&quot; title=&quot;注册Github&quot;&gt;&lt;/a&gt;注册Github&lt;/h3&gt;&lt;p&gt;前往&lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github官网&lt;/a&gt;注册账号，点击 Sign in 输入用户名（全英文纯小写）、邮箱和密码进行注册，邮箱尤其重要，一定要牢记。&lt;/p&gt;
&lt;h3 id=&quot;创建仓库-Repository&quot;&gt;&lt;a href=&quot;#创建仓库-Repository&quot; class=&quot;headerlink&quot; title=&quot;创建仓库 Repository&quot;&gt;&lt;/a&gt;创建仓库 Repository&lt;/h3&gt;&lt;p&gt;注册登录Github主页后，点击 &lt;code&gt;New repository&lt;/code&gt; 绿色按钮进行创建，在为仓库命名时需要注意的是他的命名规则。在前面我们讲到，&lt;code&gt;GitHub Pages&lt;/code&gt; 默认为每个注册用户分配了一个二级域名，形如： &lt;code&gt;harbingwang.github.com&lt;/code&gt; 和 &lt;code&gt;harbingwang.github.io&lt;/code&gt;，分别对应GithubPages的两种类型，&lt;code&gt;Project Pages&lt;/code&gt; 和 &lt;code&gt;User Pages&lt;/code&gt; ，区别在于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UserPages 访问的地址是二级域名 &lt;code&gt;http://username.github.io&lt;/code&gt;，部署静态博客的时候需要部署到 &lt;code&gt;master&lt;/code&gt; 分支。 创建项目名称为： &lt;code&gt;username.github.io&lt;/code&gt; ，将 &lt;code&gt;username&lt;/code&gt; 改为你注册时的用户名，一定要保持一致，个人博客推荐使用这种方式；&lt;/li&gt;
&lt;li&gt;Project Pages 访问的地址是 &lt;code&gt;http://username.github.io/projectname&lt;/code&gt;，需要部署到&lt;code&gt;gh-pages&lt;/code&gt;分支。创建项目名称可以随意。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;设置-Git&quot;&gt;&lt;a href=&quot;#设置-Git&quot; class=&quot;headerlink&quot; title=&quot;设置 Git&quot;&gt;&lt;/a&gt;设置 Git&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;开始 -&amp;gt;　Git -&amp;gt; Git Bash，执行下面的命令：&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git config --global user&lt;span class=&quot;selector-class&quot;&gt;.email&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;注册时的邮箱地址&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config --global user&lt;span class=&quot;selector-class&quot;&gt;.name&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;注册时的账户名&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;检查-SSH-keys&quot;&gt;&lt;a href=&quot;#检查-SSH-keys&quot; class=&quot;headerlink&quot; title=&quot;检查 SSH keys&quot;&gt;&lt;/a&gt;检查 SSH keys&lt;/h3&gt;&lt;p&gt;所谓 SSH keys 就是用来将本地的 Git 项目与Github 账号联系起来；&lt;br&gt;首先我们要检查自己电脑上是否有现有的 SSH keys&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/.ssh	&lt;span class=&quot;comment&quot;&gt;# 检查本机的ssh密钥&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;如果显示“No such file or directory”，说明我们是第一次使用Git，直接使用生成新的 SSH keys 邪的指令；&lt;/li&gt;
&lt;li&gt;否则可以使用下面的方法备份和移除原有的 SSH keys ;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;ls&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;config  id_rsa  id_rsa.pub  known_hosts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;mkdir key_backup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;cp id_rsa* key_backup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;rm id_rsa*&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;生成新的-SSH-keys&quot;&gt;&lt;a href=&quot;#生成新的-SSH-keys&quot; class=&quot;headerlink&quot; title=&quot;生成新的 SSH keys&quot;&gt;&lt;/a&gt;生成新的 SSH keys&lt;/h3&gt;&lt;p&gt;输入下面的命令就能生成新的key文件，当Git提示我们需要输入文件名时，回车就行；&lt;br&gt;&lt;figure class=&quot;highlight mathematica&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh-keygen -t rsa -&lt;span class=&quot;keyword&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;注册时的邮箱地址&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;执行过程中会显示以下内容：&lt;br&gt;&lt;img src=&quot;http://7xso8o.com1.z0.glb.clouddn.com/imagesync%2F201604%2FQQ%E6%88%AA%E5%9B%BE20160411212342.png&quot; alt=&quot;SSH Keys&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;添加-SSH-Key-到-GitHub&quot;&gt;&lt;a href=&quot;#添加-SSH-Key-到-GitHub&quot; class=&quot;headerlink&quot; title=&quot;添加 SSH Key 到 GitHub&quot;&gt;&lt;/a&gt;添加 SSH Key 到 GitHub&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;通过查看钥匙保存的路径找到已经生成的&lt;code&gt;id_rsa.pub&lt;/code&gt;文件，用 Notepad++ 等文档编辑器打开，拷贝这个文件里面的内容；&lt;/li&gt;
&lt;li&gt;登录&lt;code&gt;Github&lt;/code&gt;-&amp;gt; &lt;code&gt;Settings&lt;/code&gt;—&amp;gt; &lt;code&gt;SSH keys&lt;/code&gt; —&amp;gt; &lt;code&gt;Add SSH key&lt;/code&gt;，在Title文本框中输入任意字符，在Key文本框粘贴刚才复制的公钥字符串，按保存按钮完成操作。[提示： 公钥字符串一般是以ssh-rsa开头的，文本框也会有提示]&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;验证-SSH-Key-是否成功加入到-GitHub&quot;&gt;&lt;a href=&quot;#验证-SSH-Key-是否成功加入到-GitHub&quot; class=&quot;headerlink&quot; title=&quot;验证 SSH Key 是否成功加入到 GitHub&quot;&gt;&lt;/a&gt;验证 SSH Key 是否成功加入到 GitHub&lt;/h3&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh -T git@github&lt;span class=&quot;selector-class&quot;&gt;.com&lt;/span&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#注意： git@github&lt;span class=&quot;selector-class&quot;&gt;.com&lt;/span&gt; 不需要做替换，严格按照这样的形式操作就行；&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果出现下面的密钥指纹警告&lt;br&gt;&lt;figure class=&quot;highlight livescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Are you sure you want &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt; connecting (&lt;span class=&quot;literal&quot;&gt;yes&lt;/span&gt;/&lt;span class=&quot;literal&quot;&gt;no&lt;/span&gt;)?&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;输入 &lt;code&gt;yes&lt;/code&gt; 回车即可，如果添加成功你能看到这样的提示：&lt;br&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Hi HarbingWang! You&#39;ve successfully authenticated, &lt;span class=&quot;keyword&quot;&gt;but&lt;/span&gt; GitHub &lt;span class=&quot;keyword&quot;&gt;does&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; provide shell access.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;配置-config-yml-文件&quot;&gt;&lt;a href=&quot;#配置-config-yml-文件&quot; class=&quot;headerlink&quot; title=&quot;配置 _config.yml 文件&quot;&gt;&lt;/a&gt;配置 _config.yml 文件&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;　Hexo 3.0.0默认未安装hexo-deployer-git插件，如果你之前未安装，目标目录下执行以下命令安装&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-deployer-git &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;修改&lt;code&gt;E:Hexo/_config.yml&lt;/code&gt;文件中的 &lt;code&gt;deploy&lt;/code&gt;项，具体格式如下：&lt;br&gt;&lt;figure class=&quot;highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;deploy&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;: git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;repo&lt;/span&gt;: git&lt;span class=&quot;variable&quot;&gt;@github&lt;/span&gt;.&lt;span class=&quot;attribute&quot;&gt;com&lt;/span&gt;:username/username.github.io.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;branch&lt;/span&gt;: master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;Git完成部署&quot;&gt;&lt;a href=&quot;#Git完成部署&quot; class=&quot;headerlink&quot; title=&quot;Git完成部署&quot;&gt;&lt;/a&gt;Git完成部署&lt;/h3&gt;&lt;p&gt;在目标目录（E:/Hexo）下鼠标右键 选择Git Bash Here&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo g &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt;	&lt;span class=&quot;comment&quot;&gt;# 生成静态文件并部署到 Github&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;测试搭建效果&quot;&gt;&lt;a href=&quot;#测试搭建效果&quot; class=&quot;headerlink&quot; title=&quot;测试搭建效果&quot;&gt;&lt;/a&gt;测试搭建效果&lt;/h3&gt;&lt;p&gt;至此，个人静态博客的搭建与部署已经完成，在浏览器端打开　&lt;code&gt;http://username.github.io&lt;/code&gt; 查看搭建效果，第一次使用可能会相对较慢，一般不会超过十分钟，请耐心等待。&lt;/p&gt;
&lt;h2 id=&quot;出错参考&quot;&gt;&lt;a href=&quot;#出错参考&quot; class=&quot;headerlink&quot; title=&quot;出错参考&quot;&gt;&lt;/a&gt;出错参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://xuanwo.org/2014/08/14/hexo-usual-problem/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo常见问题解决方案&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/wx_962464/article/details/44786929&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo 使用中遇到的问题总结 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://segmentfault.com/q/1010000003870970&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;localhost:4000访问本地blog一直无响应&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;Reference&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ninghao.net/blog/1379&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git 入门手册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/a2023a601ceb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo–搭建&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://eric.ec/blog/hexo-independent-blog-new-ways.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo：独立博客新玩法&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/zhcncn/p/4097881.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo搭建Github静态博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://beiyuu.com/github-pages/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用Github Pages建独立博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://llqy.github.io/2016/03/11/hexo-%E9%83%A8%E7%BD%B2%E9%9D%99%E6%80%81blog%E4%BA%8Egithub/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo 部署静态blog于github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ninghao.net/blog/1412&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用 Hexo 生成一套静态博客网页&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://echovic.github.io/2016/03/03/My-New-Post/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;搭建Hexo个人博客部署到github&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/05289a4bc8b2#&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何搭建一个独立博客——简明Github Pages与Hexo教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      本文主要介绍如何使用Hexo搭建个人静态博客，并将其部署到Github上。
    
    </summary>
    
      <category term="博客搭建" scheme="http://yoursite.com/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="GitHub" scheme="http://yoursite.com/tags/GitHub/"/>
    
  </entry>
  
</feed>
